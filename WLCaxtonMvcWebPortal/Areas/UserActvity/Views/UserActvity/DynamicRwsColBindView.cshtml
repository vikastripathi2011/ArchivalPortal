
@model WLCaxtonMvcWebPortal.ViewModel.DocumentViewModel
@{
    Layout = "~/Views/Shared/_LayoutForAll.cshtml";
    ViewBag.Title = "Dynamic RwsCol Bind View";
    //WebGrid grid = new WebGrid(source: Model.MasterdocList, canSort: true,
    //        canPage: true,
    //        rowsPerPage: 10, selectionFieldName: "selectedRow", ajaxUpdateContainerId: "gridContent");
    //grid.Pager(WebGridPagerModes.All);

    var grid = new WebGrid(source: Model.MasterdocList, canSort: true, ajaxUpdateContainerId: "tableId", rowsPerPage: 5);

}

@****************************** All Script file *********************************************************@

 @Scripts.Render(Url.Content("~/Scripts/DataTables-1.10.7/media/js/jquery.dragtable.js"))
 @Styles.Render(Url.Content("~/Scripts/DataTables-1.10.7/media/css/dragtable.css"))

 @Scripts.Render(Url.Content("https://cdn.datatables.net/rowgroup/1.0.2/js/dataTables.rowGroup.min.js"))
 @Scripts.Render(Url.Content("https://cdn.datatables.net/rowgroup/1.0.2/css/rowGroup.dataTables.min.css"))


 @Scripts.Render(Url.Content("~/Scripts/Areajs/UserActvity.js"))
<script type="text/javascript">
    $(document).ready(function () {
        $('#tblMasterdocList').dragtable();

    });

</script>

<style type="text/css" media="screen, projection, print">
    @@media print {

        .no-print {
            display: none !important;
        }

        body {
            background-color: lightblue;
        }

        span#dvpdf {
            display: none !important;
        }

        a[href]:after {
            content: none !important;
        }
    }

    @@media screen and (-webkit-min-device-pixel-ratio:0) {
        a[href]:after {
            content: none !important;
        }
    }
</style>


<style>
    tr.group,
    tr.group:hover {
        background-color: #ddd !important;
    }

    tr.sub {
        display: none;
    }

    .CX {
        width: 35px;
    }

        .CX span {
            font-family: fantasy;
            font-size: 15px;
            display: block;
            width: 100%;
            cursor: pointer;
            text-align: center;
        }
</style>

<div class="contHead">
    Documents Search

</div>
<div class="contBox clear">

    <div class="formdiv" id="formCpwd">
        <div class="dvSearcDetails" id="dvSearcDetails">
            <div class="gridTitle">
                Search Result


            </div>
            @*@Html.Partial("_SearchResult")*@
            @if (Model != null)
            {
                <div class="gridContent clear">
                    <div class="dataTables_wrapper divInb" style="min-height: 350px !important" id="divAllPrint">

                        <div class="no-print">
                            <label for="group-switch">Group Switcher</label>
                            <input type="checkbox" id="group-switch" class="group-switch">
                        </div>
                        @if (Model.MasterdocList != null && Model.MasterdocList.Count > 0)
                        {
                            <div id="main" style="padding:25px; background-color:white;">
                              @grid.GetHtml(
                                        htmlAttributes: new { id = "tableId" },
                                        tableStyle: "wGrid",
                                        headerStyle: "wGridHeader",
                                        alternatingRowStyle: "alt",
                                        selectedRowStyle: "select",
                                        columns: Model.WebGridClassModel.ColNames
                            )


                            </div>

                            @*<div id="main" style="padding:25px; background-color:white;">
                                    @grid.GetHtml(tableStyle: "webGrid display gridHover",
                                     headerStyle: "header",
                                     alternatingRowStyle: "alt",
                                     selectedRowStyle: "select",
                                     htmlAttributes: new { id = "gridT" },
                                    // columns: ViewBag.Columns
                                    columns: grid.Columns(
                                    grid.Column(header: "Show Details", format: (item) => Html.Raw("<span id ='dvView' style='cursor: pointer;'data-DocguId=" + Model.masterdocumentDetails.DocumentGUID + " data-cnt=" + Model.masterdocumentDetails.PageCountHidden +
                                              " onclick='javascript: fn_ShowDocumentDetails(this)'> <img src='/Images/file-pdf.png'  class='no - print' title='Show Document Details' /> </span>")),
                                     grid.Column(header: "Show File", format: (item) => Html.Raw("<a href=" + Url.Action("ShowPDF", "Data", new { DocguId = Model.masterdocumentDetails.DocumentGUID, cnt = Model.masterdocumentDetails.PageCountHidden, spn = "1" }) + "><img src='/Images/file-pdf.png' title='Show File' /></a>")),
                                    //grid.Column(ViewBag.Columns)
                                    grid.Column(header: "Date", format: (item) => string.Format("{0:dd/MM/yyyy}", Model.masterdocumentDetails.DocumentDate)),
                                    grid.Column("AccountNumber", "Policy No"),
                                    grid.Column("DocumentType", "DocTypes"),
                                    grid.Column("Postcode", "ZipCode"),
                                    grid.Column("PageCount", "Page Count"),
                                    grid.Column("SpoolName", "Spool Name"),
                                    grid.Column("StreamName", "Stream Code"),

                                    grid.Column(format: (item) =>
                                    {
                                        WebGrid subGrid = new WebGrid(source: Model.subdocumentDetails, canSort: false);
                                        return subGrid.GetHtml(
                                            htmlAttributes: new { id = "subT", width = "50%" },
                                            columns: subGrid.Columns(
                                            subGrid.Column(header: "Show File", format: (item1) => Html.Raw("<a href=" + Url.Action("UserActivity", "", new { DocguId = @item1.DocumentGUID, cnt = @item1.DocumentGUID, spn = "1" }) + "><img src='/Images/file-pdf.png' title='Show File' /></a>")),
                                            subGrid.Column("DocumentType", "DocumentType"),
                                            subGrid.Column("PageCount", "PageCount")
                                                )
                                                );
                                    })
                                     )
                                    )
                                </div>*@



                                    @*<table id="tblMasterdocList" class="display gridHover">
                                            <thead>
                                                <tr>
                                                    <th class="no-print"></th>
                                                    <th class="no-print">
                                                        Show Details
                                                    </th>
                                                    <th class="no-print">
                                                        Show File
                                                    </th>
                                                    @for (Int32 i = 0; i <= Model.MasterdocColumnList.Count - 3; i++)
                                                    {
                                                        <th>
                                                            @Html.DisplayFor(x => x.MasterdocColumnList[i].DyanamicColumn)
                                                        </th>
                                                    }

                                                </tr>
                                            </thead>

                                            <tbody>
                                                @for (Int32 i = 0; i <= Model.MasterdocList.Count - 1; i++)
                                                {
                                                    <tr>
                                                        <td class="CX no-print">
                                                            <img id="imgPlus" class="no-print" src='@Url.Content("~/Images/img/icons/toggle-plus.png")' title='Show Details' />
                                                        </td>
                                                        <td class="tal no-print">
                                                            <span id="dvView" class="dvView" title='Show Document Details' style="color: Blue; font-style: italic; cursor: pointer;">
                                                                <img src='@Url.Content("~/Images/viewB.png")' class="no-print" title='Show Document Details' />
                                                            </span>
                                                        </td>

                                                        <td class="tal no-print">
                                                            <span id="dvpdf" class="dvpdf" title='Show PDF' style="cursor: pointer;">
                                                                <a href="https://s3.amazonaws.com/@Model.BucketDetailsList[0].fileURL"><img src='@Url.Content("~/Images/file-pdf.png")' class="no-print" title='Show PDF' /></a>
                                                            </span>
                                                        </td>

                                                        <td>@Html.DisplayFor(m => m.MasterdocList[0].DyanamicRows)</td>


                                                    </tr>
                                                    <tr id="dvOnlyPrint" class="sub">
                                                        <td></td>
                                                        <td colspan="5">
                                                            @if (Model.subdocumentDetails != null && Model.subdocumentDetails.Count > 0)
                                                            {
                                                                <table id="tblsubdocumentDetails" class="display clear clsgrid gridHover sticky-header">
                                                                    <thead>
                                                                        <tr>
                                                                            <th>Show File</th>
                                                                            <th>Document Type</th>
                                                                            <th>Page Count</th>

                                                                        </tr>

                                                                    </thead>
                                                                    <tbody>
                                                                        @for (Int32 j = 0; j <= Model.subdocumentDetails.Count - 1; j++)
                                                                        {

                                                                            <tr>

                                                                                <td class="tal no-print">
                                                                                    <span id="dvpdf" class="dvpdf" title='Show PDF' style="cursor: pointer;"
                                                                                          data-DocguId="@Model.masterdocumentDetails.DocumentGUID"
                                                                                          data-cnt="@Model.masterdocumentDetails.PageCountHidden"
                                                                                          data-spn="@Model.BucketDetailsList[0].BucketName">
                                                                                        <a href="https://s3.amazonaws.com/@Model.BucketDetailsList[0].fileURL"><img src='@Url.Content("~/Images/file-pdf.png")' class="no-print" title='Show PDF' /></a>
                                                                                    </span>
                                                                                </td>
                                                                                <td>

                                                                                    @Html.DisplayFor(a => a.subdocumentDetails[j].DocumentType)
                                                                                </td>
                                                                                <td>
                                                                                    @Html.DisplayFor(a => a.subdocumentDetails[j].PageCount)
                                                                                </td>

                                                                            </tr>
                                                                        }
                                                                    </tbody>

                                                                </table>
                                                            }
                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>*@



                                    <div class="clear">
                                        &nbsp;
                                    </div>


                                    }
                                    else
                                    {
                                        <div style="color: #ff0000; padding: 7em 0 0 22em; font-size: 2em;">
                                            Sorry record not found.
                                        </div>

                                    }
                    </div>
                </div>

                                    }
        </div>
    </div>


</div>
@*//------------------------------------------Start Dispute Pop Detail----------------------------------------------------------//*@

<div class="contBox clear" id="dvDocument" title="Inventory Status" style="width: 100%;
        height: auto!important; min-height: auto!important; overflow: auto; display: none;">
    <div id="dvDetails" class="dvDetails">
        <div class="gridContent clear">
            <div id="dvDocumentDetails">
                @*@Html.Partial("_DocumentDetails")*@
            </div>
        </div>
    </div>
</div>

@*//-------------------------------------------End Dispute Pop Detail----------------------------------------------------------//*@

<script>
    $(document).ready(function () {
        var size = $("#main #gridT > thead > tr >th").size(); // get total column
        $("#main #gridT > thead > tr >th").last().remove(); // remove last column
        $("#main #gridT > thead > tr").prepend("<th></th>"); // add one column at first for collapsible column
        $("#main #gridT > tbody > tr").each(function (i, el) {
            $(this).prepend(
                    $("<td></td>")
                    .addClass("expand")
                    .addClass("hoverEff")
                    .attr('title', "click for show/hide")
                );

            //Now get sub table from last column and add this to the next new added row
            var table = $("table", this).parent().html();
            //add new row with this subtable
            $(this).after("<tr><td></td><td style='padding:5px; margin:0px;' colspan='" + (size - 1) + "'>" + table + "</td></tr>");
            $("table", this).parent().remove();
            // ADD CLICK EVENT FOR MAKE COLLAPSIBLE
            $(".hoverEff", this).on("click", function () {
                $(this).parent().closest("tr").next().slideToggle(100);
                $(this).toggleClass("expand collapse");
            });
        });

        //by default make all subgrid in collapse mode
        $("#main #gridT > tbody > tr td.expand").each(function (i, el) {
            $(this).toggleClass("expand collapse");
            $(this).parent().closest("tr").next().slideToggle(100);
        });

    });
</script>
<style type="text/css">
    th, td {
        padding: 5px;
    }

    th {
        background-color: rgb(248, 248, 248);
    }

    #gridT, #gridT tr {
        border: 1px solid #0D857B;
    }

    #subT, #subT tr {
        border: 1px solid #f3f3f3;
    }

    #subT {
        margin: 0px 0px 0px 40px;
        padding: 5px;
        width: 50%;
    }

        #subT th {
            font-size: 12px;
        }

        #subT td {
            text-align: center;
        }

    .hoverEff {
        cursor: pointer;
        width: 10px;
    }

        .hoverEff:hover {
            background-color: rgb(248, 242, 242);
        }

    .expand {
        background-image: url(../images/minus.png);
        background-repeat: no-repeat;
    }

    .collapse {
        background-image: url(../Images/plus.png);
        background-repeat: no-repeat;
    }
</style>

<script>
    $(function () {
        $('body').on('click', '.CX img', function () {
            if ($(this).attr(" src") == "/Images/img/icons/toggle-plus.png") {
                $(this).attr("src", "/Images/img/icons/toggle-minus.png");
            } else {
                $(this).attr("src", "/Images/img/icons/toggle-plus.png");
            }

            //When Click On + sign
            //if ($(this).text() == '+') {
            //    $(this).text('-');
            //   // $('.CX img').prop('src', '/Images/img/icons/toggle-minus.png');
            //}
            //else {
            //    $(this).text('+');
            //   // $('.img1 img').prop('src', '/Images/img/icons/toggle-plus.png');
            //}
            $(this).closest('tr') // row of + sign
            .next('tr') // next row of + sign
            .toggle(); // if show then hide else show

        });
    });



</script>


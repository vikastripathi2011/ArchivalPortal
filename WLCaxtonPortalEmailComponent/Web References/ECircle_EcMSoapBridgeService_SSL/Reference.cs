//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WLCaxtonPortalEmailComponent.ECircle_EcMSoapBridgeService_SSL {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="rpcSoapBinding", Namespace="http://webservices.ecircleag.com/rpcns")]
    public partial class EcMSoapBridgeService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGroupIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback logonOperationCompleted;
        
        private System.Threading.SendOrPostCallback logoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback setAsynchronousOperationCompleted;
        
        private System.Threading.SendOrPostCallback createUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback createOrUpdateUserByEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback createOrUpdateUserMemberByEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteUserByEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback lookupUserByEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback lookupUserIdByEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateUserAttributesByEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback lookupUserByIdentifierOperationCompleted;
        
        private System.Threading.SendOrPostCallback lookupUserByMobileNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback lookupMemberByMobileNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback lookupUserByFaxNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback lookupMessageByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback lookupMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback lookupGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback createMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback lookupUserByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback lookupMemberByEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback lookupMemberByEmail_v2_0OperationCompleted;
        
        private System.Threading.SendOrPostCallback lookupMemberByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback lookupMemberById_v2_0OperationCompleted;
        
        private System.Threading.SendOrPostCallback lookupMemberByIdentifierOperationCompleted;
        
        private System.Threading.SendOrPostCallback findUserIdsByIdentifierOperationCompleted;
        
        private System.Threading.SendOrPostCallback findMembershipsByEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback lookupMemberByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback lookupMemberByUserId_v2_0OperationCompleted;
        
        private System.Threading.SendOrPostCallback updateMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateUserByEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeOrRegisterUserMemberByEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeMemberByEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback registerUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeMemberByEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback cloneGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback changeGroupSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback setGroupPropertyOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGroupPropertyOperationCompleted;
        
        private System.Threading.SendOrPostCallback setMessageFormatOperationCompleted;
        
        private System.Threading.SendOrPostCallback copyAndSendDraftMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendSingleMessageToUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendPrioritySingleMessageToUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendParametrizedSingleMessageToUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendPriorityParametrizedSingleMessageToUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendGroupMessageToUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendEmailToMeOperationCompleted;
        
        private System.Threading.SendOrPostCallback addToBlacklistOperationCompleted;
        
        private System.Threading.SendOrPostCallback isEmailOnSystemBlacklistOperationCompleted;
        
        private System.Threading.SendOrPostCallback isEmailBouncedSystemwideOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeFromBlacklistOperationCompleted;
        
        private System.Threading.SendOrPostCallback createOrUpdateGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback lookupHourlyMessageStatsOperationCompleted;
        
        private System.Threading.SendOrPostCallback addSingleRelatedDataRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateRelatedDataRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteRelatedDataRecordsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public EcMSoapBridgeService() {
            this.Url = global::WLCaxtonPortalEmailComponent.Properties.Settings.Default.WLCaxtonPortalEmailComponent_ECircle_EcMSoapBridgeService_SSL_EcMSoapBridgeService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getVersionCompletedEventHandler getVersionCompleted;
        
        /// <remarks/>
        public event getGroupIdCompletedEventHandler getGroupIdCompleted;
        
        /// <remarks/>
        public event logonCompletedEventHandler logonCompleted;
        
        /// <remarks/>
        public event logoutCompletedEventHandler logoutCompleted;
        
        /// <remarks/>
        public event setAsynchronousCompletedEventHandler setAsynchronousCompleted;
        
        /// <remarks/>
        public event createUserCompletedEventHandler createUserCompleted;
        
        /// <remarks/>
        public event createOrUpdateUserByEmailCompletedEventHandler createOrUpdateUserByEmailCompleted;
        
        /// <remarks/>
        public event createOrUpdateUserMemberByEmailCompletedEventHandler createOrUpdateUserMemberByEmailCompleted;
        
        /// <remarks/>
        public event deleteUserByEmailCompletedEventHandler deleteUserByEmailCompleted;
        
        /// <remarks/>
        public event lookupUserByEmailCompletedEventHandler lookupUserByEmailCompleted;
        
        /// <remarks/>
        public event lookupUserIdByEmailCompletedEventHandler lookupUserIdByEmailCompleted;
        
        /// <remarks/>
        public event updateUserAttributesByEmailCompletedEventHandler updateUserAttributesByEmailCompleted;
        
        /// <remarks/>
        public event lookupUserByIdentifierCompletedEventHandler lookupUserByIdentifierCompleted;
        
        /// <remarks/>
        public event lookupUserByMobileNumberCompletedEventHandler lookupUserByMobileNumberCompleted;
        
        /// <remarks/>
        public event lookupMemberByMobileNumberCompletedEventHandler lookupMemberByMobileNumberCompleted;
        
        /// <remarks/>
        public event lookupUserByFaxNumberCompletedEventHandler lookupUserByFaxNumberCompleted;
        
        /// <remarks/>
        public event lookupMessageByIdCompletedEventHandler lookupMessageByIdCompleted;
        
        /// <remarks/>
        public event lookupMessagesCompletedEventHandler lookupMessagesCompleted;
        
        /// <remarks/>
        public event lookupGroupsCompletedEventHandler lookupGroupsCompleted;
        
        /// <remarks/>
        public event createMemberCompletedEventHandler createMemberCompleted;
        
        /// <remarks/>
        public event lookupUserByIdCompletedEventHandler lookupUserByIdCompleted;
        
        /// <remarks/>
        public event lookupMemberByEmailCompletedEventHandler lookupMemberByEmailCompleted;
        
        /// <remarks/>
        public event lookupMemberByEmail_v2_0CompletedEventHandler lookupMemberByEmail_v2_0Completed;
        
        /// <remarks/>
        public event lookupMemberByIdCompletedEventHandler lookupMemberByIdCompleted;
        
        /// <remarks/>
        public event lookupMemberById_v2_0CompletedEventHandler lookupMemberById_v2_0Completed;
        
        /// <remarks/>
        public event lookupMemberByIdentifierCompletedEventHandler lookupMemberByIdentifierCompleted;
        
        /// <remarks/>
        public event findUserIdsByIdentifierCompletedEventHandler findUserIdsByIdentifierCompleted;
        
        /// <remarks/>
        public event findMembershipsByEmailCompletedEventHandler findMembershipsByEmailCompleted;
        
        /// <remarks/>
        public event lookupMemberByUserIdCompletedEventHandler lookupMemberByUserIdCompleted;
        
        /// <remarks/>
        public event lookupMemberByUserId_v2_0CompletedEventHandler lookupMemberByUserId_v2_0Completed;
        
        /// <remarks/>
        public event updateMemberCompletedEventHandler updateMemberCompleted;
        
        /// <remarks/>
        public event updateUserCompletedEventHandler updateUserCompleted;
        
        /// <remarks/>
        public event updateUserByEmailCompletedEventHandler updateUserByEmailCompleted;
        
        /// <remarks/>
        public event deleteUserCompletedEventHandler deleteUserCompleted;
        
        /// <remarks/>
        public event deleteMemberCompletedEventHandler deleteMemberCompleted;
        
        /// <remarks/>
        public event subscribeOrRegisterUserMemberByEmailCompletedEventHandler subscribeOrRegisterUserMemberByEmailCompleted;
        
        /// <remarks/>
        public event subscribeMemberByEmailCompletedEventHandler subscribeMemberByEmailCompleted;
        
        /// <remarks/>
        public event registerUserCompletedEventHandler registerUserCompleted;
        
        /// <remarks/>
        public event unsubscribeMemberByEmailCompletedEventHandler unsubscribeMemberByEmailCompleted;
        
        /// <remarks/>
        public event deleteMessageCompletedEventHandler deleteMessageCompleted;
        
        /// <remarks/>
        public event cloneGroupCompletedEventHandler cloneGroupCompleted;
        
        /// <remarks/>
        public event changeGroupSettingsCompletedEventHandler changeGroupSettingsCompleted;
        
        /// <remarks/>
        public event setGroupPropertyCompletedEventHandler setGroupPropertyCompleted;
        
        /// <remarks/>
        public event getGroupPropertyCompletedEventHandler getGroupPropertyCompleted;
        
        /// <remarks/>
        public event setMessageFormatCompletedEventHandler setMessageFormatCompleted;
        
        /// <remarks/>
        public event copyAndSendDraftMessageCompletedEventHandler copyAndSendDraftMessageCompleted;
        
        /// <remarks/>
        public event sendSingleMessageToUserCompletedEventHandler sendSingleMessageToUserCompleted;
        
        /// <remarks/>
        public event sendPrioritySingleMessageToUserCompletedEventHandler sendPrioritySingleMessageToUserCompleted;
        
        /// <remarks/>
        public event sendParametrizedSingleMessageToUserCompletedEventHandler sendParametrizedSingleMessageToUserCompleted;
        
        /// <remarks/>
        public event sendPriorityParametrizedSingleMessageToUserCompletedEventHandler sendPriorityParametrizedSingleMessageToUserCompleted;
        
        /// <remarks/>
        public event sendGroupMessageToUserCompletedEventHandler sendGroupMessageToUserCompleted;
        
        /// <remarks/>
        public event deleteGroupCompletedEventHandler deleteGroupCompleted;
        
        /// <remarks/>
        public event sendEmailToMeCompletedEventHandler sendEmailToMeCompleted;
        
        /// <remarks/>
        public event addToBlacklistCompletedEventHandler addToBlacklistCompleted;
        
        /// <remarks/>
        public event isEmailOnSystemBlacklistCompletedEventHandler isEmailOnSystemBlacklistCompleted;
        
        /// <remarks/>
        public event isEmailBouncedSystemwideCompletedEventHandler isEmailBouncedSystemwideCompleted;
        
        /// <remarks/>
        public event removeFromBlacklistCompletedEventHandler removeFromBlacklistCompleted;
        
        /// <remarks/>
        public event createOrUpdateGroupCompletedEventHandler createOrUpdateGroupCompleted;
        
        /// <remarks/>
        public event lookupHourlyMessageStatsCompletedEventHandler lookupHourlyMessageStatsCompleted;
        
        /// <remarks/>
        public event addSingleRelatedDataRecordCompletedEventHandler addSingleRelatedDataRecordCompleted;
        
        /// <remarks/>
        public event updateRelatedDataRecordCompletedEventHandler updateRelatedDataRecordCompleted;
        
        /// <remarks/>
        public event deleteRelatedDataRecordsCompletedEventHandler deleteRelatedDataRecordsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getVersionReturn")]
        public string getVersion() {
            object[] results = this.Invoke("getVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getVersionAsync() {
            this.getVersionAsync(null);
        }
        
        /// <remarks/>
        public void getVersionAsync(object userState) {
            if ((this.getVersionOperationCompleted == null)) {
                this.getVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVersionOperationCompleted);
            }
            this.InvokeAsync("getVersion", new object[0], this.getVersionOperationCompleted, userState);
        }
        
        private void OngetVersionOperationCompleted(object arg) {
            if ((this.getVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVersionCompleted(this, new getVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getGroupIdReturn", IsNullable=true)]
        public string getGroupId(string session, string email) {
            object[] results = this.Invoke("getGroupId", new object[] {
                        session,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getGroupIdAsync(string session, string email) {
            this.getGroupIdAsync(session, email, null);
        }
        
        /// <remarks/>
        public void getGroupIdAsync(string session, string email, object userState) {
            if ((this.getGroupIdOperationCompleted == null)) {
                this.getGroupIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGroupIdOperationCompleted);
            }
            this.InvokeAsync("getGroupId", new object[] {
                        session,
                        email}, this.getGroupIdOperationCompleted, userState);
        }
        
        private void OngetGroupIdOperationCompleted(object arg) {
            if ((this.getGroupIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGroupIdCompleted(this, new getGroupIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("logonReturn")]
        public string logon(string realm, string user, string passwd) {
            object[] results = this.Invoke("logon", new object[] {
                        realm,
                        user,
                        passwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void logonAsync(string realm, string user, string passwd) {
            this.logonAsync(realm, user, passwd, null);
        }
        
        /// <remarks/>
        public void logonAsync(string realm, string user, string passwd, object userState) {
            if ((this.logonOperationCompleted == null)) {
                this.logonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogonOperationCompleted);
            }
            this.InvokeAsync("logon", new object[] {
                        realm,
                        user,
                        passwd}, this.logonOperationCompleted, userState);
        }
        
        private void OnlogonOperationCompleted(object arg) {
            if ((this.logonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logonCompleted(this, new logonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void logout(string session) {
            this.Invoke("logout", new object[] {
                        session});
        }
        
        /// <remarks/>
        public void logoutAsync(string session) {
            this.logoutAsync(session, null);
        }
        
        /// <remarks/>
        public void logoutAsync(string session, object userState) {
            if ((this.logoutOperationCompleted == null)) {
                this.logoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogoutOperationCompleted);
            }
            this.InvokeAsync("logout", new object[] {
                        session}, this.logoutOperationCompleted, userState);
        }
        
        private void OnlogoutOperationCompleted(object arg) {
            if ((this.logoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logoutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setAsynchronous(string session, bool asynchronous) {
            this.Invoke("setAsynchronous", new object[] {
                        session,
                        asynchronous});
        }
        
        /// <remarks/>
        public void setAsynchronousAsync(string session, bool asynchronous) {
            this.setAsynchronousAsync(session, asynchronous, null);
        }
        
        /// <remarks/>
        public void setAsynchronousAsync(string session, bool asynchronous, object userState) {
            if ((this.setAsynchronousOperationCompleted == null)) {
                this.setAsynchronousOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetAsynchronousOperationCompleted);
            }
            this.InvokeAsync("setAsynchronous", new object[] {
                        session,
                        asynchronous}, this.setAsynchronousOperationCompleted, userState);
        }
        
        private void OnsetAsynchronousOperationCompleted(object arg) {
            if ((this.setAsynchronousCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setAsynchronousCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("createUserReturn")]
        public string createUser(string session, string userXmlSpec) {
            object[] results = this.Invoke("createUser", new object[] {
                        session,
                        userXmlSpec});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createUserAsync(string session, string userXmlSpec) {
            this.createUserAsync(session, userXmlSpec, null);
        }
        
        /// <remarks/>
        public void createUserAsync(string session, string userXmlSpec, object userState) {
            if ((this.createUserOperationCompleted == null)) {
                this.createUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateUserOperationCompleted);
            }
            this.InvokeAsync("createUser", new object[] {
                        session,
                        userXmlSpec}, this.createUserOperationCompleted, userState);
        }
        
        private void OncreateUserOperationCompleted(object arg) {
            if ((this.createUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createUserCompleted(this, new createUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("createOrUpdateUserByEmailReturn")]
        public string createOrUpdateUserByEmail(string session, string userXml, bool sendMessage) {
            object[] results = this.Invoke("createOrUpdateUserByEmail", new object[] {
                        session,
                        userXml,
                        sendMessage});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createOrUpdateUserByEmailAsync(string session, string userXml, bool sendMessage) {
            this.createOrUpdateUserByEmailAsync(session, userXml, sendMessage, null);
        }
        
        /// <remarks/>
        public void createOrUpdateUserByEmailAsync(string session, string userXml, bool sendMessage, object userState) {
            if ((this.createOrUpdateUserByEmailOperationCompleted == null)) {
                this.createOrUpdateUserByEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateOrUpdateUserByEmailOperationCompleted);
            }
            this.InvokeAsync("createOrUpdateUserByEmail", new object[] {
                        session,
                        userXml,
                        sendMessage}, this.createOrUpdateUserByEmailOperationCompleted, userState);
        }
        
        private void OncreateOrUpdateUserByEmailOperationCompleted(object arg) {
            if ((this.createOrUpdateUserByEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createOrUpdateUserByEmailCompleted(this, new createOrUpdateUserByEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("createOrUpdateUserMemberByEmailReturn")]
        public string createOrUpdateUserMemberByEmail(string session, string memberXml, string groupId, bool sendMessage) {
            object[] results = this.Invoke("createOrUpdateUserMemberByEmail", new object[] {
                        session,
                        memberXml,
                        groupId,
                        sendMessage});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createOrUpdateUserMemberByEmailAsync(string session, string memberXml, string groupId, bool sendMessage) {
            this.createOrUpdateUserMemberByEmailAsync(session, memberXml, groupId, sendMessage, null);
        }
        
        /// <remarks/>
        public void createOrUpdateUserMemberByEmailAsync(string session, string memberXml, string groupId, bool sendMessage, object userState) {
            if ((this.createOrUpdateUserMemberByEmailOperationCompleted == null)) {
                this.createOrUpdateUserMemberByEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateOrUpdateUserMemberByEmailOperationCompleted);
            }
            this.InvokeAsync("createOrUpdateUserMemberByEmail", new object[] {
                        session,
                        memberXml,
                        groupId,
                        sendMessage}, this.createOrUpdateUserMemberByEmailOperationCompleted, userState);
        }
        
        private void OncreateOrUpdateUserMemberByEmailOperationCompleted(object arg) {
            if ((this.createOrUpdateUserMemberByEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createOrUpdateUserMemberByEmailCompleted(this, new createOrUpdateUserMemberByEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteUserByEmail(string session, string email) {
            this.Invoke("deleteUserByEmail", new object[] {
                        session,
                        email});
        }
        
        /// <remarks/>
        public void deleteUserByEmailAsync(string session, string email) {
            this.deleteUserByEmailAsync(session, email, null);
        }
        
        /// <remarks/>
        public void deleteUserByEmailAsync(string session, string email, object userState) {
            if ((this.deleteUserByEmailOperationCompleted == null)) {
                this.deleteUserByEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteUserByEmailOperationCompleted);
            }
            this.InvokeAsync("deleteUserByEmail", new object[] {
                        session,
                        email}, this.deleteUserByEmailOperationCompleted, userState);
        }
        
        private void OndeleteUserByEmailOperationCompleted(object arg) {
            if ((this.deleteUserByEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteUserByEmailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("lookupUserByEmailReturn", IsNullable=true)]
        public string lookupUserByEmail(string session, string email) {
            object[] results = this.Invoke("lookupUserByEmail", new object[] {
                        session,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void lookupUserByEmailAsync(string session, string email) {
            this.lookupUserByEmailAsync(session, email, null);
        }
        
        /// <remarks/>
        public void lookupUserByEmailAsync(string session, string email, object userState) {
            if ((this.lookupUserByEmailOperationCompleted == null)) {
                this.lookupUserByEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlookupUserByEmailOperationCompleted);
            }
            this.InvokeAsync("lookupUserByEmail", new object[] {
                        session,
                        email}, this.lookupUserByEmailOperationCompleted, userState);
        }
        
        private void OnlookupUserByEmailOperationCompleted(object arg) {
            if ((this.lookupUserByEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.lookupUserByEmailCompleted(this, new lookupUserByEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("lookupUserIdByEmailReturn", IsNullable=true)]
        public string lookupUserIdByEmail(string session, string email) {
            object[] results = this.Invoke("lookupUserIdByEmail", new object[] {
                        session,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void lookupUserIdByEmailAsync(string session, string email) {
            this.lookupUserIdByEmailAsync(session, email, null);
        }
        
        /// <remarks/>
        public void lookupUserIdByEmailAsync(string session, string email, object userState) {
            if ((this.lookupUserIdByEmailOperationCompleted == null)) {
                this.lookupUserIdByEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlookupUserIdByEmailOperationCompleted);
            }
            this.InvokeAsync("lookupUserIdByEmail", new object[] {
                        session,
                        email}, this.lookupUserIdByEmailOperationCompleted, userState);
        }
        
        private void OnlookupUserIdByEmailOperationCompleted(object arg) {
            if ((this.lookupUserIdByEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.lookupUserIdByEmailCompleted(this, new lookupUserIdByEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("updateUserAttributesByEmailReturn")]
        public bool updateUserAttributesByEmail(string session, string email, [System.Xml.Serialization.XmlElementAttribute("names")] string[] names, [System.Xml.Serialization.XmlElementAttribute("values")] string[] values, [System.Xml.Serialization.XmlElementAttribute("createUser")] bool createUser1) {
            object[] results = this.Invoke("updateUserAttributesByEmail", new object[] {
                        session,
                        email,
                        names,
                        values,
                        createUser1});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateUserAttributesByEmailAsync(string session, string email, string[] names, string[] values, bool createUser1) {
            this.updateUserAttributesByEmailAsync(session, email, names, values, createUser1, null);
        }
        
        /// <remarks/>
        public void updateUserAttributesByEmailAsync(string session, string email, string[] names, string[] values, bool createUser1, object userState) {
            if ((this.updateUserAttributesByEmailOperationCompleted == null)) {
                this.updateUserAttributesByEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateUserAttributesByEmailOperationCompleted);
            }
            this.InvokeAsync("updateUserAttributesByEmail", new object[] {
                        session,
                        email,
                        names,
                        values,
                        createUser1}, this.updateUserAttributesByEmailOperationCompleted, userState);
        }
        
        private void OnupdateUserAttributesByEmailOperationCompleted(object arg) {
            if ((this.updateUserAttributesByEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateUserAttributesByEmailCompleted(this, new updateUserAttributesByEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("lookupUserByIdentifierReturn", IsNullable=true)]
        public string lookupUserByIdentifier(string session, string identifier) {
            object[] results = this.Invoke("lookupUserByIdentifier", new object[] {
                        session,
                        identifier});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void lookupUserByIdentifierAsync(string session, string identifier) {
            this.lookupUserByIdentifierAsync(session, identifier, null);
        }
        
        /// <remarks/>
        public void lookupUserByIdentifierAsync(string session, string identifier, object userState) {
            if ((this.lookupUserByIdentifierOperationCompleted == null)) {
                this.lookupUserByIdentifierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlookupUserByIdentifierOperationCompleted);
            }
            this.InvokeAsync("lookupUserByIdentifier", new object[] {
                        session,
                        identifier}, this.lookupUserByIdentifierOperationCompleted, userState);
        }
        
        private void OnlookupUserByIdentifierOperationCompleted(object arg) {
            if ((this.lookupUserByIdentifierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.lookupUserByIdentifierCompleted(this, new lookupUserByIdentifierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("lookupUserByMobileNumberReturn", IsNullable=true)]
        public string lookupUserByMobileNumber(string session, string mobile) {
            object[] results = this.Invoke("lookupUserByMobileNumber", new object[] {
                        session,
                        mobile});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void lookupUserByMobileNumberAsync(string session, string mobile) {
            this.lookupUserByMobileNumberAsync(session, mobile, null);
        }
        
        /// <remarks/>
        public void lookupUserByMobileNumberAsync(string session, string mobile, object userState) {
            if ((this.lookupUserByMobileNumberOperationCompleted == null)) {
                this.lookupUserByMobileNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlookupUserByMobileNumberOperationCompleted);
            }
            this.InvokeAsync("lookupUserByMobileNumber", new object[] {
                        session,
                        mobile}, this.lookupUserByMobileNumberOperationCompleted, userState);
        }
        
        private void OnlookupUserByMobileNumberOperationCompleted(object arg) {
            if ((this.lookupUserByMobileNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.lookupUserByMobileNumberCompleted(this, new lookupUserByMobileNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("lookupMemberByMobileNumberReturn", IsNullable=true)]
        public string lookupMemberByMobileNumber(string session, string groupId, string mobile, bool onlyActive) {
            object[] results = this.Invoke("lookupMemberByMobileNumber", new object[] {
                        session,
                        groupId,
                        mobile,
                        onlyActive});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void lookupMemberByMobileNumberAsync(string session, string groupId, string mobile, bool onlyActive) {
            this.lookupMemberByMobileNumberAsync(session, groupId, mobile, onlyActive, null);
        }
        
        /// <remarks/>
        public void lookupMemberByMobileNumberAsync(string session, string groupId, string mobile, bool onlyActive, object userState) {
            if ((this.lookupMemberByMobileNumberOperationCompleted == null)) {
                this.lookupMemberByMobileNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlookupMemberByMobileNumberOperationCompleted);
            }
            this.InvokeAsync("lookupMemberByMobileNumber", new object[] {
                        session,
                        groupId,
                        mobile,
                        onlyActive}, this.lookupMemberByMobileNumberOperationCompleted, userState);
        }
        
        private void OnlookupMemberByMobileNumberOperationCompleted(object arg) {
            if ((this.lookupMemberByMobileNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.lookupMemberByMobileNumberCompleted(this, new lookupMemberByMobileNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("lookupUserByFaxNumberReturn", IsNullable=true)]
        public string lookupUserByFaxNumber(string session, string fax) {
            object[] results = this.Invoke("lookupUserByFaxNumber", new object[] {
                        session,
                        fax});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void lookupUserByFaxNumberAsync(string session, string fax) {
            this.lookupUserByFaxNumberAsync(session, fax, null);
        }
        
        /// <remarks/>
        public void lookupUserByFaxNumberAsync(string session, string fax, object userState) {
            if ((this.lookupUserByFaxNumberOperationCompleted == null)) {
                this.lookupUserByFaxNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlookupUserByFaxNumberOperationCompleted);
            }
            this.InvokeAsync("lookupUserByFaxNumber", new object[] {
                        session,
                        fax}, this.lookupUserByFaxNumberOperationCompleted, userState);
        }
        
        private void OnlookupUserByFaxNumberOperationCompleted(object arg) {
            if ((this.lookupUserByFaxNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.lookupUserByFaxNumberCompleted(this, new lookupUserByFaxNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("lookupMessageByIdReturn", IsNullable=true)]
        public MessageContent lookupMessageById(string session, string messageId) {
            object[] results = this.Invoke("lookupMessageById", new object[] {
                        session,
                        messageId});
            return ((MessageContent)(results[0]));
        }
        
        /// <remarks/>
        public void lookupMessageByIdAsync(string session, string messageId) {
            this.lookupMessageByIdAsync(session, messageId, null);
        }
        
        /// <remarks/>
        public void lookupMessageByIdAsync(string session, string messageId, object userState) {
            if ((this.lookupMessageByIdOperationCompleted == null)) {
                this.lookupMessageByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlookupMessageByIdOperationCompleted);
            }
            this.InvokeAsync("lookupMessageById", new object[] {
                        session,
                        messageId}, this.lookupMessageByIdOperationCompleted, userState);
        }
        
        private void OnlookupMessageByIdOperationCompleted(object arg) {
            if ((this.lookupMessageByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.lookupMessageByIdCompleted(this, new lookupMessageByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("lookupMessagesReturn")]
        public MessageInfo[] lookupMessages(string session, MessageLookupParams lookupParams) {
            object[] results = this.Invoke("lookupMessages", new object[] {
                        session,
                        lookupParams});
            return ((MessageInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void lookupMessagesAsync(string session, MessageLookupParams lookupParams) {
            this.lookupMessagesAsync(session, lookupParams, null);
        }
        
        /// <remarks/>
        public void lookupMessagesAsync(string session, MessageLookupParams lookupParams, object userState) {
            if ((this.lookupMessagesOperationCompleted == null)) {
                this.lookupMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlookupMessagesOperationCompleted);
            }
            this.InvokeAsync("lookupMessages", new object[] {
                        session,
                        lookupParams}, this.lookupMessagesOperationCompleted, userState);
        }
        
        private void OnlookupMessagesOperationCompleted(object arg) {
            if ((this.lookupMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.lookupMessagesCompleted(this, new lookupMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("lookupGroupsReturn")]
        public GroupCore[] lookupGroups(string session, GroupLookupParams lookupParams) {
            object[] results = this.Invoke("lookupGroups", new object[] {
                        session,
                        lookupParams});
            return ((GroupCore[])(results[0]));
        }
        
        /// <remarks/>
        public void lookupGroupsAsync(string session, GroupLookupParams lookupParams) {
            this.lookupGroupsAsync(session, lookupParams, null);
        }
        
        /// <remarks/>
        public void lookupGroupsAsync(string session, GroupLookupParams lookupParams, object userState) {
            if ((this.lookupGroupsOperationCompleted == null)) {
                this.lookupGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlookupGroupsOperationCompleted);
            }
            this.InvokeAsync("lookupGroups", new object[] {
                        session,
                        lookupParams}, this.lookupGroupsOperationCompleted, userState);
        }
        
        private void OnlookupGroupsOperationCompleted(object arg) {
            if ((this.lookupGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.lookupGroupsCompleted(this, new lookupGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("createMemberReturn")]
        public string createMember(string session, string userId, string groupId, bool invite, bool sendMessage) {
            object[] results = this.Invoke("createMember", new object[] {
                        session,
                        userId,
                        groupId,
                        invite,
                        sendMessage});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createMemberAsync(string session, string userId, string groupId, bool invite, bool sendMessage) {
            this.createMemberAsync(session, userId, groupId, invite, sendMessage, null);
        }
        
        /// <remarks/>
        public void createMemberAsync(string session, string userId, string groupId, bool invite, bool sendMessage, object userState) {
            if ((this.createMemberOperationCompleted == null)) {
                this.createMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateMemberOperationCompleted);
            }
            this.InvokeAsync("createMember", new object[] {
                        session,
                        userId,
                        groupId,
                        invite,
                        sendMessage}, this.createMemberOperationCompleted, userState);
        }
        
        private void OncreateMemberOperationCompleted(object arg) {
            if ((this.createMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createMemberCompleted(this, new createMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("lookupUserByIdReturn", IsNullable=true)]
        public string lookupUserById(string session, string userId) {
            object[] results = this.Invoke("lookupUserById", new object[] {
                        session,
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void lookupUserByIdAsync(string session, string userId) {
            this.lookupUserByIdAsync(session, userId, null);
        }
        
        /// <remarks/>
        public void lookupUserByIdAsync(string session, string userId, object userState) {
            if ((this.lookupUserByIdOperationCompleted == null)) {
                this.lookupUserByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlookupUserByIdOperationCompleted);
            }
            this.InvokeAsync("lookupUserById", new object[] {
                        session,
                        userId}, this.lookupUserByIdOperationCompleted, userState);
        }
        
        private void OnlookupUserByIdOperationCompleted(object arg) {
            if ((this.lookupUserByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.lookupUserByIdCompleted(this, new lookupUserByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("lookupMemberByEmailReturn", IsNullable=true)]
        public string lookupMemberByEmail(string session, string groupId, string email) {
            object[] results = this.Invoke("lookupMemberByEmail", new object[] {
                        session,
                        groupId,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void lookupMemberByEmailAsync(string session, string groupId, string email) {
            this.lookupMemberByEmailAsync(session, groupId, email, null);
        }
        
        /// <remarks/>
        public void lookupMemberByEmailAsync(string session, string groupId, string email, object userState) {
            if ((this.lookupMemberByEmailOperationCompleted == null)) {
                this.lookupMemberByEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlookupMemberByEmailOperationCompleted);
            }
            this.InvokeAsync("lookupMemberByEmail", new object[] {
                        session,
                        groupId,
                        email}, this.lookupMemberByEmailOperationCompleted, userState);
        }
        
        private void OnlookupMemberByEmailOperationCompleted(object arg) {
            if ((this.lookupMemberByEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.lookupMemberByEmailCompleted(this, new lookupMemberByEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("lookupMemberByEmail_v2_0Return", IsNullable=true)]
        public string lookupMemberByEmail_v2_0(string session, string groupId, string email, bool onlyActive) {
            object[] results = this.Invoke("lookupMemberByEmail_v2_0", new object[] {
                        session,
                        groupId,
                        email,
                        onlyActive});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void lookupMemberByEmail_v2_0Async(string session, string groupId, string email, bool onlyActive) {
            this.lookupMemberByEmail_v2_0Async(session, groupId, email, onlyActive, null);
        }
        
        /// <remarks/>
        public void lookupMemberByEmail_v2_0Async(string session, string groupId, string email, bool onlyActive, object userState) {
            if ((this.lookupMemberByEmail_v2_0OperationCompleted == null)) {
                this.lookupMemberByEmail_v2_0OperationCompleted = new System.Threading.SendOrPostCallback(this.OnlookupMemberByEmail_v2_0OperationCompleted);
            }
            this.InvokeAsync("lookupMemberByEmail_v2_0", new object[] {
                        session,
                        groupId,
                        email,
                        onlyActive}, this.lookupMemberByEmail_v2_0OperationCompleted, userState);
        }
        
        private void OnlookupMemberByEmail_v2_0OperationCompleted(object arg) {
            if ((this.lookupMemberByEmail_v2_0Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.lookupMemberByEmail_v2_0Completed(this, new lookupMemberByEmail_v2_0CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("lookupMemberByIdReturn", IsNullable=true)]
        public string lookupMemberById(string session, string memberid) {
            object[] results = this.Invoke("lookupMemberById", new object[] {
                        session,
                        memberid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void lookupMemberByIdAsync(string session, string memberid) {
            this.lookupMemberByIdAsync(session, memberid, null);
        }
        
        /// <remarks/>
        public void lookupMemberByIdAsync(string session, string memberid, object userState) {
            if ((this.lookupMemberByIdOperationCompleted == null)) {
                this.lookupMemberByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlookupMemberByIdOperationCompleted);
            }
            this.InvokeAsync("lookupMemberById", new object[] {
                        session,
                        memberid}, this.lookupMemberByIdOperationCompleted, userState);
        }
        
        private void OnlookupMemberByIdOperationCompleted(object arg) {
            if ((this.lookupMemberByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.lookupMemberByIdCompleted(this, new lookupMemberByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("lookupMemberById_v2_0Return", IsNullable=true)]
        public string lookupMemberById_v2_0(string session, string memberid, bool onlyActive) {
            object[] results = this.Invoke("lookupMemberById_v2_0", new object[] {
                        session,
                        memberid,
                        onlyActive});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void lookupMemberById_v2_0Async(string session, string memberid, bool onlyActive) {
            this.lookupMemberById_v2_0Async(session, memberid, onlyActive, null);
        }
        
        /// <remarks/>
        public void lookupMemberById_v2_0Async(string session, string memberid, bool onlyActive, object userState) {
            if ((this.lookupMemberById_v2_0OperationCompleted == null)) {
                this.lookupMemberById_v2_0OperationCompleted = new System.Threading.SendOrPostCallback(this.OnlookupMemberById_v2_0OperationCompleted);
            }
            this.InvokeAsync("lookupMemberById_v2_0", new object[] {
                        session,
                        memberid,
                        onlyActive}, this.lookupMemberById_v2_0OperationCompleted, userState);
        }
        
        private void OnlookupMemberById_v2_0OperationCompleted(object arg) {
            if ((this.lookupMemberById_v2_0Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.lookupMemberById_v2_0Completed(this, new lookupMemberById_v2_0CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("lookupMemberByIdentifierReturn", IsNullable=true)]
        public string lookupMemberByIdentifier(string session, string groupId, string identifier, bool onlyActive) {
            object[] results = this.Invoke("lookupMemberByIdentifier", new object[] {
                        session,
                        groupId,
                        identifier,
                        onlyActive});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void lookupMemberByIdentifierAsync(string session, string groupId, string identifier, bool onlyActive) {
            this.lookupMemberByIdentifierAsync(session, groupId, identifier, onlyActive, null);
        }
        
        /// <remarks/>
        public void lookupMemberByIdentifierAsync(string session, string groupId, string identifier, bool onlyActive, object userState) {
            if ((this.lookupMemberByIdentifierOperationCompleted == null)) {
                this.lookupMemberByIdentifierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlookupMemberByIdentifierOperationCompleted);
            }
            this.InvokeAsync("lookupMemberByIdentifier", new object[] {
                        session,
                        groupId,
                        identifier,
                        onlyActive}, this.lookupMemberByIdentifierOperationCompleted, userState);
        }
        
        private void OnlookupMemberByIdentifierOperationCompleted(object arg) {
            if ((this.lookupMemberByIdentifierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.lookupMemberByIdentifierCompleted(this, new lookupMemberByIdentifierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("findUserIdsByIdentifierReturn", IsNullable=true)]
        public string[] findUserIdsByIdentifier(string session, string identifier) {
            object[] results = this.Invoke("findUserIdsByIdentifier", new object[] {
                        session,
                        identifier});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void findUserIdsByIdentifierAsync(string session, string identifier) {
            this.findUserIdsByIdentifierAsync(session, identifier, null);
        }
        
        /// <remarks/>
        public void findUserIdsByIdentifierAsync(string session, string identifier, object userState) {
            if ((this.findUserIdsByIdentifierOperationCompleted == null)) {
                this.findUserIdsByIdentifierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindUserIdsByIdentifierOperationCompleted);
            }
            this.InvokeAsync("findUserIdsByIdentifier", new object[] {
                        session,
                        identifier}, this.findUserIdsByIdentifierOperationCompleted, userState);
        }
        
        private void OnfindUserIdsByIdentifierOperationCompleted(object arg) {
            if ((this.findUserIdsByIdentifierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findUserIdsByIdentifierCompleted(this, new findUserIdsByIdentifierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("findMembershipsByEmailReturn", IsNullable=true)]
        public string[] findMembershipsByEmail(string session, string email) {
            object[] results = this.Invoke("findMembershipsByEmail", new object[] {
                        session,
                        email});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void findMembershipsByEmailAsync(string session, string email) {
            this.findMembershipsByEmailAsync(session, email, null);
        }
        
        /// <remarks/>
        public void findMembershipsByEmailAsync(string session, string email, object userState) {
            if ((this.findMembershipsByEmailOperationCompleted == null)) {
                this.findMembershipsByEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindMembershipsByEmailOperationCompleted);
            }
            this.InvokeAsync("findMembershipsByEmail", new object[] {
                        session,
                        email}, this.findMembershipsByEmailOperationCompleted, userState);
        }
        
        private void OnfindMembershipsByEmailOperationCompleted(object arg) {
            if ((this.findMembershipsByEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findMembershipsByEmailCompleted(this, new findMembershipsByEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("lookupMemberByUserIdReturn", IsNullable=true)]
        public string lookupMemberByUserId(string session, string groupid, string userId) {
            object[] results = this.Invoke("lookupMemberByUserId", new object[] {
                        session,
                        groupid,
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void lookupMemberByUserIdAsync(string session, string groupid, string userId) {
            this.lookupMemberByUserIdAsync(session, groupid, userId, null);
        }
        
        /// <remarks/>
        public void lookupMemberByUserIdAsync(string session, string groupid, string userId, object userState) {
            if ((this.lookupMemberByUserIdOperationCompleted == null)) {
                this.lookupMemberByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlookupMemberByUserIdOperationCompleted);
            }
            this.InvokeAsync("lookupMemberByUserId", new object[] {
                        session,
                        groupid,
                        userId}, this.lookupMemberByUserIdOperationCompleted, userState);
        }
        
        private void OnlookupMemberByUserIdOperationCompleted(object arg) {
            if ((this.lookupMemberByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.lookupMemberByUserIdCompleted(this, new lookupMemberByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("lookupMemberByUserId_v2_0Return", IsNullable=true)]
        public string lookupMemberByUserId_v2_0(string session, string groupid, string userId, bool onlyActive) {
            object[] results = this.Invoke("lookupMemberByUserId_v2_0", new object[] {
                        session,
                        groupid,
                        userId,
                        onlyActive});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void lookupMemberByUserId_v2_0Async(string session, string groupid, string userId, bool onlyActive) {
            this.lookupMemberByUserId_v2_0Async(session, groupid, userId, onlyActive, null);
        }
        
        /// <remarks/>
        public void lookupMemberByUserId_v2_0Async(string session, string groupid, string userId, bool onlyActive, object userState) {
            if ((this.lookupMemberByUserId_v2_0OperationCompleted == null)) {
                this.lookupMemberByUserId_v2_0OperationCompleted = new System.Threading.SendOrPostCallback(this.OnlookupMemberByUserId_v2_0OperationCompleted);
            }
            this.InvokeAsync("lookupMemberByUserId_v2_0", new object[] {
                        session,
                        groupid,
                        userId,
                        onlyActive}, this.lookupMemberByUserId_v2_0OperationCompleted, userState);
        }
        
        private void OnlookupMemberByUserId_v2_0OperationCompleted(object arg) {
            if ((this.lookupMemberByUserId_v2_0Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.lookupMemberByUserId_v2_0Completed(this, new lookupMemberByUserId_v2_0CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("updateMemberReturn")]
        public bool updateMember(string session, string memberXmlSpec) {
            object[] results = this.Invoke("updateMember", new object[] {
                        session,
                        memberXmlSpec});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateMemberAsync(string session, string memberXmlSpec) {
            this.updateMemberAsync(session, memberXmlSpec, null);
        }
        
        /// <remarks/>
        public void updateMemberAsync(string session, string memberXmlSpec, object userState) {
            if ((this.updateMemberOperationCompleted == null)) {
                this.updateMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateMemberOperationCompleted);
            }
            this.InvokeAsync("updateMember", new object[] {
                        session,
                        memberXmlSpec}, this.updateMemberOperationCompleted, userState);
        }
        
        private void OnupdateMemberOperationCompleted(object arg) {
            if ((this.updateMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateMemberCompleted(this, new updateMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("updateUserReturn")]
        public bool updateUser(string session, string userXmlSpec) {
            object[] results = this.Invoke("updateUser", new object[] {
                        session,
                        userXmlSpec});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateUserAsync(string session, string userXmlSpec) {
            this.updateUserAsync(session, userXmlSpec, null);
        }
        
        /// <remarks/>
        public void updateUserAsync(string session, string userXmlSpec, object userState) {
            if ((this.updateUserOperationCompleted == null)) {
                this.updateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateUserOperationCompleted);
            }
            this.InvokeAsync("updateUser", new object[] {
                        session,
                        userXmlSpec}, this.updateUserOperationCompleted, userState);
        }
        
        private void OnupdateUserOperationCompleted(object arg) {
            if ((this.updateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateUserCompleted(this, new updateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("updateUserByEmailReturn")]
        public bool updateUserByEmail(string session, string userXmlSpec) {
            object[] results = this.Invoke("updateUserByEmail", new object[] {
                        session,
                        userXmlSpec});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateUserByEmailAsync(string session, string userXmlSpec) {
            this.updateUserByEmailAsync(session, userXmlSpec, null);
        }
        
        /// <remarks/>
        public void updateUserByEmailAsync(string session, string userXmlSpec, object userState) {
            if ((this.updateUserByEmailOperationCompleted == null)) {
                this.updateUserByEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateUserByEmailOperationCompleted);
            }
            this.InvokeAsync("updateUserByEmail", new object[] {
                        session,
                        userXmlSpec}, this.updateUserByEmailOperationCompleted, userState);
        }
        
        private void OnupdateUserByEmailOperationCompleted(object arg) {
            if ((this.updateUserByEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateUserByEmailCompleted(this, new updateUserByEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("deleteUserReturn")]
        public bool deleteUser(string session, string userId) {
            object[] results = this.Invoke("deleteUser", new object[] {
                        session,
                        userId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteUserAsync(string session, string userId) {
            this.deleteUserAsync(session, userId, null);
        }
        
        /// <remarks/>
        public void deleteUserAsync(string session, string userId, object userState) {
            if ((this.deleteUserOperationCompleted == null)) {
                this.deleteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteUserOperationCompleted);
            }
            this.InvokeAsync("deleteUser", new object[] {
                        session,
                        userId}, this.deleteUserOperationCompleted, userState);
        }
        
        private void OndeleteUserOperationCompleted(object arg) {
            if ((this.deleteUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteUserCompleted(this, new deleteUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("deleteMemberReturn")]
        public bool deleteMember(string session, string memberId) {
            object[] results = this.Invoke("deleteMember", new object[] {
                        session,
                        memberId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteMemberAsync(string session, string memberId) {
            this.deleteMemberAsync(session, memberId, null);
        }
        
        /// <remarks/>
        public void deleteMemberAsync(string session, string memberId, object userState) {
            if ((this.deleteMemberOperationCompleted == null)) {
                this.deleteMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteMemberOperationCompleted);
            }
            this.InvokeAsync("deleteMember", new object[] {
                        session,
                        memberId}, this.deleteMemberOperationCompleted, userState);
        }
        
        private void OndeleteMemberOperationCompleted(object arg) {
            if ((this.deleteMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteMemberCompleted(this, new deleteMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("subscribeOrRegisterUserMemberByEmailReturn")]
        public string subscribeOrRegisterUserMemberByEmail(string session, string userXmlSpec, string groupId, bool sendMessage) {
            object[] results = this.Invoke("subscribeOrRegisterUserMemberByEmail", new object[] {
                        session,
                        userXmlSpec,
                        groupId,
                        sendMessage});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void subscribeOrRegisterUserMemberByEmailAsync(string session, string userXmlSpec, string groupId, bool sendMessage) {
            this.subscribeOrRegisterUserMemberByEmailAsync(session, userXmlSpec, groupId, sendMessage, null);
        }
        
        /// <remarks/>
        public void subscribeOrRegisterUserMemberByEmailAsync(string session, string userXmlSpec, string groupId, bool sendMessage, object userState) {
            if ((this.subscribeOrRegisterUserMemberByEmailOperationCompleted == null)) {
                this.subscribeOrRegisterUserMemberByEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeOrRegisterUserMemberByEmailOperationCompleted);
            }
            this.InvokeAsync("subscribeOrRegisterUserMemberByEmail", new object[] {
                        session,
                        userXmlSpec,
                        groupId,
                        sendMessage}, this.subscribeOrRegisterUserMemberByEmailOperationCompleted, userState);
        }
        
        private void OnsubscribeOrRegisterUserMemberByEmailOperationCompleted(object arg) {
            if ((this.subscribeOrRegisterUserMemberByEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeOrRegisterUserMemberByEmailCompleted(this, new subscribeOrRegisterUserMemberByEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("subscribeMemberByEmailReturn")]
        public bool subscribeMemberByEmail(string session, string email, string groupId, bool sendMessage) {
            object[] results = this.Invoke("subscribeMemberByEmail", new object[] {
                        session,
                        email,
                        groupId,
                        sendMessage});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void subscribeMemberByEmailAsync(string session, string email, string groupId, bool sendMessage) {
            this.subscribeMemberByEmailAsync(session, email, groupId, sendMessage, null);
        }
        
        /// <remarks/>
        public void subscribeMemberByEmailAsync(string session, string email, string groupId, bool sendMessage, object userState) {
            if ((this.subscribeMemberByEmailOperationCompleted == null)) {
                this.subscribeMemberByEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeMemberByEmailOperationCompleted);
            }
            this.InvokeAsync("subscribeMemberByEmail", new object[] {
                        session,
                        email,
                        groupId,
                        sendMessage}, this.subscribeMemberByEmailOperationCompleted, userState);
        }
        
        private void OnsubscribeMemberByEmailOperationCompleted(object arg) {
            if ((this.subscribeMemberByEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeMemberByEmailCompleted(this, new subscribeMemberByEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("registerUserReturn")]
        public string registerUser(string session, string userXmlSpec, bool sendMessage) {
            object[] results = this.Invoke("registerUser", new object[] {
                        session,
                        userXmlSpec,
                        sendMessage});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void registerUserAsync(string session, string userXmlSpec, bool sendMessage) {
            this.registerUserAsync(session, userXmlSpec, sendMessage, null);
        }
        
        /// <remarks/>
        public void registerUserAsync(string session, string userXmlSpec, bool sendMessage, object userState) {
            if ((this.registerUserOperationCompleted == null)) {
                this.registerUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregisterUserOperationCompleted);
            }
            this.InvokeAsync("registerUser", new object[] {
                        session,
                        userXmlSpec,
                        sendMessage}, this.registerUserOperationCompleted, userState);
        }
        
        private void OnregisterUserOperationCompleted(object arg) {
            if ((this.registerUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.registerUserCompleted(this, new registerUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("unsubscribeMemberByEmailReturn")]
        public bool unsubscribeMemberByEmail(string session, string email, string groupId, bool sendMessage) {
            object[] results = this.Invoke("unsubscribeMemberByEmail", new object[] {
                        session,
                        email,
                        groupId,
                        sendMessage});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void unsubscribeMemberByEmailAsync(string session, string email, string groupId, bool sendMessage) {
            this.unsubscribeMemberByEmailAsync(session, email, groupId, sendMessage, null);
        }
        
        /// <remarks/>
        public void unsubscribeMemberByEmailAsync(string session, string email, string groupId, bool sendMessage, object userState) {
            if ((this.unsubscribeMemberByEmailOperationCompleted == null)) {
                this.unsubscribeMemberByEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeMemberByEmailOperationCompleted);
            }
            this.InvokeAsync("unsubscribeMemberByEmail", new object[] {
                        session,
                        email,
                        groupId,
                        sendMessage}, this.unsubscribeMemberByEmailOperationCompleted, userState);
        }
        
        private void OnunsubscribeMemberByEmailOperationCompleted(object arg) {
            if ((this.unsubscribeMemberByEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeMemberByEmailCompleted(this, new unsubscribeMemberByEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("deleteMessageReturn")]
        public bool deleteMessage(string session, string messageId) {
            object[] results = this.Invoke("deleteMessage", new object[] {
                        session,
                        messageId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteMessageAsync(string session, string messageId) {
            this.deleteMessageAsync(session, messageId, null);
        }
        
        /// <remarks/>
        public void deleteMessageAsync(string session, string messageId, object userState) {
            if ((this.deleteMessageOperationCompleted == null)) {
                this.deleteMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteMessageOperationCompleted);
            }
            this.InvokeAsync("deleteMessage", new object[] {
                        session,
                        messageId}, this.deleteMessageOperationCompleted, userState);
        }
        
        private void OndeleteMessageOperationCompleted(object arg) {
            if ((this.deleteMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteMessageCompleted(this, new deleteMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("cloneGroupReturn")]
        public string cloneGroup(string session, string templateGroupId, string newGroupEmail, string newGroupName, bool keepOwner) {
            object[] results = this.Invoke("cloneGroup", new object[] {
                        session,
                        templateGroupId,
                        newGroupEmail,
                        newGroupName,
                        keepOwner});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void cloneGroupAsync(string session, string templateGroupId, string newGroupEmail, string newGroupName, bool keepOwner) {
            this.cloneGroupAsync(session, templateGroupId, newGroupEmail, newGroupName, keepOwner, null);
        }
        
        /// <remarks/>
        public void cloneGroupAsync(string session, string templateGroupId, string newGroupEmail, string newGroupName, bool keepOwner, object userState) {
            if ((this.cloneGroupOperationCompleted == null)) {
                this.cloneGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OncloneGroupOperationCompleted);
            }
            this.InvokeAsync("cloneGroup", new object[] {
                        session,
                        templateGroupId,
                        newGroupEmail,
                        newGroupName,
                        keepOwner}, this.cloneGroupOperationCompleted, userState);
        }
        
        private void OncloneGroupOperationCompleted(object arg) {
            if ((this.cloneGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cloneGroupCompleted(this, new cloneGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void changeGroupSettings(string session, string groupId, string description, string prefix, string textFooter, string textHeader, string htmlFooter, string htmlHeader) {
            this.Invoke("changeGroupSettings", new object[] {
                        session,
                        groupId,
                        description,
                        prefix,
                        textFooter,
                        textHeader,
                        htmlFooter,
                        htmlHeader});
        }
        
        /// <remarks/>
        public void changeGroupSettingsAsync(string session, string groupId, string description, string prefix, string textFooter, string textHeader, string htmlFooter, string htmlHeader) {
            this.changeGroupSettingsAsync(session, groupId, description, prefix, textFooter, textHeader, htmlFooter, htmlHeader, null);
        }
        
        /// <remarks/>
        public void changeGroupSettingsAsync(string session, string groupId, string description, string prefix, string textFooter, string textHeader, string htmlFooter, string htmlHeader, object userState) {
            if ((this.changeGroupSettingsOperationCompleted == null)) {
                this.changeGroupSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangeGroupSettingsOperationCompleted);
            }
            this.InvokeAsync("changeGroupSettings", new object[] {
                        session,
                        groupId,
                        description,
                        prefix,
                        textFooter,
                        textHeader,
                        htmlFooter,
                        htmlHeader}, this.changeGroupSettingsOperationCompleted, userState);
        }
        
        private void OnchangeGroupSettingsOperationCompleted(object arg) {
            if ((this.changeGroupSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changeGroupSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setGroupProperty(string session, string gid, string name, string value) {
            this.Invoke("setGroupProperty", new object[] {
                        session,
                        gid,
                        name,
                        value});
        }
        
        /// <remarks/>
        public void setGroupPropertyAsync(string session, string gid, string name, string value) {
            this.setGroupPropertyAsync(session, gid, name, value, null);
        }
        
        /// <remarks/>
        public void setGroupPropertyAsync(string session, string gid, string name, string value, object userState) {
            if ((this.setGroupPropertyOperationCompleted == null)) {
                this.setGroupPropertyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetGroupPropertyOperationCompleted);
            }
            this.InvokeAsync("setGroupProperty", new object[] {
                        session,
                        gid,
                        name,
                        value}, this.setGroupPropertyOperationCompleted, userState);
        }
        
        private void OnsetGroupPropertyOperationCompleted(object arg) {
            if ((this.setGroupPropertyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setGroupPropertyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getGroupPropertyReturn", IsNullable=true)]
        public string getGroupProperty(string session, string gid, string name) {
            object[] results = this.Invoke("getGroupProperty", new object[] {
                        session,
                        gid,
                        name});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getGroupPropertyAsync(string session, string gid, string name) {
            this.getGroupPropertyAsync(session, gid, name, null);
        }
        
        /// <remarks/>
        public void getGroupPropertyAsync(string session, string gid, string name, object userState) {
            if ((this.getGroupPropertyOperationCompleted == null)) {
                this.getGroupPropertyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGroupPropertyOperationCompleted);
            }
            this.InvokeAsync("getGroupProperty", new object[] {
                        session,
                        gid,
                        name}, this.getGroupPropertyOperationCompleted, userState);
        }
        
        private void OngetGroupPropertyOperationCompleted(object arg) {
            if ((this.getGroupPropertyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGroupPropertyCompleted(this, new getGroupPropertyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setMessageFormat(string session, string groupId, string userId, string messageFormat) {
            this.Invoke("setMessageFormat", new object[] {
                        session,
                        groupId,
                        userId,
                        messageFormat});
        }
        
        /// <remarks/>
        public void setMessageFormatAsync(string session, string groupId, string userId, string messageFormat) {
            this.setMessageFormatAsync(session, groupId, userId, messageFormat, null);
        }
        
        /// <remarks/>
        public void setMessageFormatAsync(string session, string groupId, string userId, string messageFormat, object userState) {
            if ((this.setMessageFormatOperationCompleted == null)) {
                this.setMessageFormatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetMessageFormatOperationCompleted);
            }
            this.InvokeAsync("setMessageFormat", new object[] {
                        session,
                        groupId,
                        userId,
                        messageFormat}, this.setMessageFormatOperationCompleted, userState);
        }
        
        private void OnsetMessageFormatOperationCompleted(object arg) {
            if ((this.setMessageFormatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setMessageFormatCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("copyAndSendDraftMessageReturn")]
        public string copyAndSendDraftMessage(string session, string groupId, string messageId) {
            object[] results = this.Invoke("copyAndSendDraftMessage", new object[] {
                        session,
                        groupId,
                        messageId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void copyAndSendDraftMessageAsync(string session, string groupId, string messageId) {
            this.copyAndSendDraftMessageAsync(session, groupId, messageId, null);
        }
        
        /// <remarks/>
        public void copyAndSendDraftMessageAsync(string session, string groupId, string messageId, object userState) {
            if ((this.copyAndSendDraftMessageOperationCompleted == null)) {
                this.copyAndSendDraftMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OncopyAndSendDraftMessageOperationCompleted);
            }
            this.InvokeAsync("copyAndSendDraftMessage", new object[] {
                        session,
                        groupId,
                        messageId}, this.copyAndSendDraftMessageOperationCompleted, userState);
        }
        
        private void OncopyAndSendDraftMessageOperationCompleted(object arg) {
            if ((this.copyAndSendDraftMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.copyAndSendDraftMessageCompleted(this, new copyAndSendDraftMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void sendSingleMessageToUser(string session, string singleMessageId, string userId) {
            this.Invoke("sendSingleMessageToUser", new object[] {
                        session,
                        singleMessageId,
                        userId});
        }
        
        /// <remarks/>
        public void sendSingleMessageToUserAsync(string session, string singleMessageId, string userId) {
            this.sendSingleMessageToUserAsync(session, singleMessageId, userId, null);
        }
        
        /// <remarks/>
        public void sendSingleMessageToUserAsync(string session, string singleMessageId, string userId, object userState) {
            if ((this.sendSingleMessageToUserOperationCompleted == null)) {
                this.sendSingleMessageToUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendSingleMessageToUserOperationCompleted);
            }
            this.InvokeAsync("sendSingleMessageToUser", new object[] {
                        session,
                        singleMessageId,
                        userId}, this.sendSingleMessageToUserOperationCompleted, userState);
        }
        
        private void OnsendSingleMessageToUserOperationCompleted(object arg) {
            if ((this.sendSingleMessageToUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendSingleMessageToUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void sendPrioritySingleMessageToUser(string session, string singleMessageId, string userId) {
            this.Invoke("sendPrioritySingleMessageToUser", new object[] {
                        session,
                        singleMessageId,
                        userId});
        }
        
        /// <remarks/>
        public void sendPrioritySingleMessageToUserAsync(string session, string singleMessageId, string userId) {
            this.sendPrioritySingleMessageToUserAsync(session, singleMessageId, userId, null);
        }
        
        /// <remarks/>
        public void sendPrioritySingleMessageToUserAsync(string session, string singleMessageId, string userId, object userState) {
            if ((this.sendPrioritySingleMessageToUserOperationCompleted == null)) {
                this.sendPrioritySingleMessageToUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendPrioritySingleMessageToUserOperationCompleted);
            }
            this.InvokeAsync("sendPrioritySingleMessageToUser", new object[] {
                        session,
                        singleMessageId,
                        userId}, this.sendPrioritySingleMessageToUserOperationCompleted, userState);
        }
        
        private void OnsendPrioritySingleMessageToUserOperationCompleted(object arg) {
            if ((this.sendPrioritySingleMessageToUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendPrioritySingleMessageToUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void sendParametrizedSingleMessageToUser(string session, string singleMessageId, string userId, [System.Xml.Serialization.XmlElementAttribute("names")] string[] names, [System.Xml.Serialization.XmlElementAttribute("values")] string[] values) {
            this.Invoke("sendParametrizedSingleMessageToUser", new object[] {
                        session,
                        singleMessageId,
                        userId,
                        names,
                        values});
        }
        
        /// <remarks/>
        public void sendParametrizedSingleMessageToUserAsync(string session, string singleMessageId, string userId, string[] names, string[] values) {
            this.sendParametrizedSingleMessageToUserAsync(session, singleMessageId, userId, names, values, null);
        }
        
        /// <remarks/>
        public void sendParametrizedSingleMessageToUserAsync(string session, string singleMessageId, string userId, string[] names, string[] values, object userState) {
            if ((this.sendParametrizedSingleMessageToUserOperationCompleted == null)) {
                this.sendParametrizedSingleMessageToUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendParametrizedSingleMessageToUserOperationCompleted);
            }
            this.InvokeAsync("sendParametrizedSingleMessageToUser", new object[] {
                        session,
                        singleMessageId,
                        userId,
                        names,
                        values}, this.sendParametrizedSingleMessageToUserOperationCompleted, userState);
        }
        
        private void OnsendParametrizedSingleMessageToUserOperationCompleted(object arg) {
            if ((this.sendParametrizedSingleMessageToUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendParametrizedSingleMessageToUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void sendPriorityParametrizedSingleMessageToUser(string session, string singleMessageId, string userId, [System.Xml.Serialization.XmlElementAttribute("names")] string[] names, [System.Xml.Serialization.XmlElementAttribute("values")] string[] values) {
            this.Invoke("sendPriorityParametrizedSingleMessageToUser", new object[] {
                        session,
                        singleMessageId,
                        userId,
                        names,
                        values});
        }
        
        /// <remarks/>
        public void sendPriorityParametrizedSingleMessageToUserAsync(string session, string singleMessageId, string userId, string[] names, string[] values) {
            this.sendPriorityParametrizedSingleMessageToUserAsync(session, singleMessageId, userId, names, values, null);
        }
        
        /// <remarks/>
        public void sendPriorityParametrizedSingleMessageToUserAsync(string session, string singleMessageId, string userId, string[] names, string[] values, object userState) {
            if ((this.sendPriorityParametrizedSingleMessageToUserOperationCompleted == null)) {
                this.sendPriorityParametrizedSingleMessageToUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendPriorityParametrizedSingleMessageToUserOperationCompleted);
            }
            this.InvokeAsync("sendPriorityParametrizedSingleMessageToUser", new object[] {
                        session,
                        singleMessageId,
                        userId,
                        names,
                        values}, this.sendPriorityParametrizedSingleMessageToUserOperationCompleted, userState);
        }
        
        private void OnsendPriorityParametrizedSingleMessageToUserOperationCompleted(object arg) {
            if ((this.sendPriorityParametrizedSingleMessageToUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendPriorityParametrizedSingleMessageToUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void sendGroupMessageToUser(string session, string groupid, string messageId, string userId) {
            this.Invoke("sendGroupMessageToUser", new object[] {
                        session,
                        groupid,
                        messageId,
                        userId});
        }
        
        /// <remarks/>
        public void sendGroupMessageToUserAsync(string session, string groupid, string messageId, string userId) {
            this.sendGroupMessageToUserAsync(session, groupid, messageId, userId, null);
        }
        
        /// <remarks/>
        public void sendGroupMessageToUserAsync(string session, string groupid, string messageId, string userId, object userState) {
            if ((this.sendGroupMessageToUserOperationCompleted == null)) {
                this.sendGroupMessageToUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendGroupMessageToUserOperationCompleted);
            }
            this.InvokeAsync("sendGroupMessageToUser", new object[] {
                        session,
                        groupid,
                        messageId,
                        userId}, this.sendGroupMessageToUserOperationCompleted, userState);
        }
        
        private void OnsendGroupMessageToUserOperationCompleted(object arg) {
            if ((this.sendGroupMessageToUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendGroupMessageToUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("deleteGroupReturn")]
        public bool deleteGroup(string session, string groupId) {
            object[] results = this.Invoke("deleteGroup", new object[] {
                        session,
                        groupId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteGroupAsync(string session, string groupId) {
            this.deleteGroupAsync(session, groupId, null);
        }
        
        /// <remarks/>
        public void deleteGroupAsync(string session, string groupId, object userState) {
            if ((this.deleteGroupOperationCompleted == null)) {
                this.deleteGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteGroupOperationCompleted);
            }
            this.InvokeAsync("deleteGroup", new object[] {
                        session,
                        groupId}, this.deleteGroupOperationCompleted, userState);
        }
        
        private void OndeleteGroupOperationCompleted(object arg) {
            if ((this.deleteGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteGroupCompleted(this, new deleteGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void sendEmailToMe(string session, string subject, string message) {
            this.Invoke("sendEmailToMe", new object[] {
                        session,
                        subject,
                        message});
        }
        
        /// <remarks/>
        public void sendEmailToMeAsync(string session, string subject, string message) {
            this.sendEmailToMeAsync(session, subject, message, null);
        }
        
        /// <remarks/>
        public void sendEmailToMeAsync(string session, string subject, string message, object userState) {
            if ((this.sendEmailToMeOperationCompleted == null)) {
                this.sendEmailToMeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendEmailToMeOperationCompleted);
            }
            this.InvokeAsync("sendEmailToMe", new object[] {
                        session,
                        subject,
                        message}, this.sendEmailToMeOperationCompleted, userState);
        }
        
        private void OnsendEmailToMeOperationCompleted(object arg) {
            if ((this.sendEmailToMeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendEmailToMeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("addToBlacklistReturn")]
        public bool addToBlacklist(string session, string groupId, string email) {
            object[] results = this.Invoke("addToBlacklist", new object[] {
                        session,
                        groupId,
                        email});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void addToBlacklistAsync(string session, string groupId, string email) {
            this.addToBlacklistAsync(session, groupId, email, null);
        }
        
        /// <remarks/>
        public void addToBlacklistAsync(string session, string groupId, string email, object userState) {
            if ((this.addToBlacklistOperationCompleted == null)) {
                this.addToBlacklistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddToBlacklistOperationCompleted);
            }
            this.InvokeAsync("addToBlacklist", new object[] {
                        session,
                        groupId,
                        email}, this.addToBlacklistOperationCompleted, userState);
        }
        
        private void OnaddToBlacklistOperationCompleted(object arg) {
            if ((this.addToBlacklistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addToBlacklistCompleted(this, new addToBlacklistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("isEmailOnSystemBlacklistReturn")]
        public bool isEmailOnSystemBlacklist(string session, string email) {
            object[] results = this.Invoke("isEmailOnSystemBlacklist", new object[] {
                        session,
                        email});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isEmailOnSystemBlacklistAsync(string session, string email) {
            this.isEmailOnSystemBlacklistAsync(session, email, null);
        }
        
        /// <remarks/>
        public void isEmailOnSystemBlacklistAsync(string session, string email, object userState) {
            if ((this.isEmailOnSystemBlacklistOperationCompleted == null)) {
                this.isEmailOnSystemBlacklistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisEmailOnSystemBlacklistOperationCompleted);
            }
            this.InvokeAsync("isEmailOnSystemBlacklist", new object[] {
                        session,
                        email}, this.isEmailOnSystemBlacklistOperationCompleted, userState);
        }
        
        private void OnisEmailOnSystemBlacklistOperationCompleted(object arg) {
            if ((this.isEmailOnSystemBlacklistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isEmailOnSystemBlacklistCompleted(this, new isEmailOnSystemBlacklistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("isEmailBouncedSystemwideReturn")]
        public bool isEmailBouncedSystemwide(string session, string email) {
            object[] results = this.Invoke("isEmailBouncedSystemwide", new object[] {
                        session,
                        email});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isEmailBouncedSystemwideAsync(string session, string email) {
            this.isEmailBouncedSystemwideAsync(session, email, null);
        }
        
        /// <remarks/>
        public void isEmailBouncedSystemwideAsync(string session, string email, object userState) {
            if ((this.isEmailBouncedSystemwideOperationCompleted == null)) {
                this.isEmailBouncedSystemwideOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisEmailBouncedSystemwideOperationCompleted);
            }
            this.InvokeAsync("isEmailBouncedSystemwide", new object[] {
                        session,
                        email}, this.isEmailBouncedSystemwideOperationCompleted, userState);
        }
        
        private void OnisEmailBouncedSystemwideOperationCompleted(object arg) {
            if ((this.isEmailBouncedSystemwideCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isEmailBouncedSystemwideCompleted(this, new isEmailBouncedSystemwideCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("removeFromBlacklistReturn")]
        public bool removeFromBlacklist(string session, string groupId, string email) {
            object[] results = this.Invoke("removeFromBlacklist", new object[] {
                        session,
                        groupId,
                        email});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void removeFromBlacklistAsync(string session, string groupId, string email) {
            this.removeFromBlacklistAsync(session, groupId, email, null);
        }
        
        /// <remarks/>
        public void removeFromBlacklistAsync(string session, string groupId, string email, object userState) {
            if ((this.removeFromBlacklistOperationCompleted == null)) {
                this.removeFromBlacklistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveFromBlacklistOperationCompleted);
            }
            this.InvokeAsync("removeFromBlacklist", new object[] {
                        session,
                        groupId,
                        email}, this.removeFromBlacklistOperationCompleted, userState);
        }
        
        private void OnremoveFromBlacklistOperationCompleted(object arg) {
            if ((this.removeFromBlacklistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeFromBlacklistCompleted(this, new removeFromBlacklistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("createOrUpdateGroupReturn", IsNullable=true)]
        public string createOrUpdateGroup(string session, string groupXML) {
            object[] results = this.Invoke("createOrUpdateGroup", new object[] {
                        session,
                        groupXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createOrUpdateGroupAsync(string session, string groupXML) {
            this.createOrUpdateGroupAsync(session, groupXML, null);
        }
        
        /// <remarks/>
        public void createOrUpdateGroupAsync(string session, string groupXML, object userState) {
            if ((this.createOrUpdateGroupOperationCompleted == null)) {
                this.createOrUpdateGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateOrUpdateGroupOperationCompleted);
            }
            this.InvokeAsync("createOrUpdateGroup", new object[] {
                        session,
                        groupXML}, this.createOrUpdateGroupOperationCompleted, userState);
        }
        
        private void OncreateOrUpdateGroupOperationCompleted(object arg) {
            if ((this.createOrUpdateGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createOrUpdateGroupCompleted(this, new createOrUpdateGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("lookupHourlyMessageStatsReturn", IsNullable=true)]
        public HourlyMessageStats[] lookupHourlyMessageStats(string session, string messageid, System.DateTime periodStartDate, System.DateTime periodEndDate) {
            object[] results = this.Invoke("lookupHourlyMessageStats", new object[] {
                        session,
                        messageid,
                        periodStartDate,
                        periodEndDate});
            return ((HourlyMessageStats[])(results[0]));
        }
        
        /// <remarks/>
        public void lookupHourlyMessageStatsAsync(string session, string messageid, System.DateTime periodStartDate, System.DateTime periodEndDate) {
            this.lookupHourlyMessageStatsAsync(session, messageid, periodStartDate, periodEndDate, null);
        }
        
        /// <remarks/>
        public void lookupHourlyMessageStatsAsync(string session, string messageid, System.DateTime periodStartDate, System.DateTime periodEndDate, object userState) {
            if ((this.lookupHourlyMessageStatsOperationCompleted == null)) {
                this.lookupHourlyMessageStatsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlookupHourlyMessageStatsOperationCompleted);
            }
            this.InvokeAsync("lookupHourlyMessageStats", new object[] {
                        session,
                        messageid,
                        periodStartDate,
                        periodEndDate}, this.lookupHourlyMessageStatsOperationCompleted, userState);
        }
        
        private void OnlookupHourlyMessageStatsOperationCompleted(object arg) {
            if ((this.lookupHourlyMessageStatsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.lookupHourlyMessageStatsCompleted(this, new lookupHourlyMessageStatsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addSingleRelatedDataRecord(string session, string relatedDatasetId, string key, [System.Xml.Serialization.XmlElementAttribute("colNames")] string[] colNames, [System.Xml.Serialization.XmlElementAttribute("colValues")] string[] colValues) {
            this.Invoke("addSingleRelatedDataRecord", new object[] {
                        session,
                        relatedDatasetId,
                        key,
                        colNames,
                        colValues});
        }
        
        /// <remarks/>
        public void addSingleRelatedDataRecordAsync(string session, string relatedDatasetId, string key, string[] colNames, string[] colValues) {
            this.addSingleRelatedDataRecordAsync(session, relatedDatasetId, key, colNames, colValues, null);
        }
        
        /// <remarks/>
        public void addSingleRelatedDataRecordAsync(string session, string relatedDatasetId, string key, string[] colNames, string[] colValues, object userState) {
            if ((this.addSingleRelatedDataRecordOperationCompleted == null)) {
                this.addSingleRelatedDataRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddSingleRelatedDataRecordOperationCompleted);
            }
            this.InvokeAsync("addSingleRelatedDataRecord", new object[] {
                        session,
                        relatedDatasetId,
                        key,
                        colNames,
                        colValues}, this.addSingleRelatedDataRecordOperationCompleted, userState);
        }
        
        private void OnaddSingleRelatedDataRecordOperationCompleted(object arg) {
            if ((this.addSingleRelatedDataRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addSingleRelatedDataRecordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateRelatedDataRecord(string session, string relatedDatasetId, string key, [System.Xml.Serialization.XmlElementAttribute("colNamesId")] string[] colNamesId, [System.Xml.Serialization.XmlElementAttribute("colValuesId")] string[] colValuesId, [System.Xml.Serialization.XmlElementAttribute("colNames")] string[] colNames, [System.Xml.Serialization.XmlElementAttribute("colValues")] string[] colValues) {
            this.Invoke("updateRelatedDataRecord", new object[] {
                        session,
                        relatedDatasetId,
                        key,
                        colNamesId,
                        colValuesId,
                        colNames,
                        colValues});
        }
        
        /// <remarks/>
        public void updateRelatedDataRecordAsync(string session, string relatedDatasetId, string key, string[] colNamesId, string[] colValuesId, string[] colNames, string[] colValues) {
            this.updateRelatedDataRecordAsync(session, relatedDatasetId, key, colNamesId, colValuesId, colNames, colValues, null);
        }
        
        /// <remarks/>
        public void updateRelatedDataRecordAsync(string session, string relatedDatasetId, string key, string[] colNamesId, string[] colValuesId, string[] colNames, string[] colValues, object userState) {
            if ((this.updateRelatedDataRecordOperationCompleted == null)) {
                this.updateRelatedDataRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateRelatedDataRecordOperationCompleted);
            }
            this.InvokeAsync("updateRelatedDataRecord", new object[] {
                        session,
                        relatedDatasetId,
                        key,
                        colNamesId,
                        colValuesId,
                        colNames,
                        colValues}, this.updateRelatedDataRecordOperationCompleted, userState);
        }
        
        private void OnupdateRelatedDataRecordOperationCompleted(object arg) {
            if ((this.updateRelatedDataRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateRelatedDataRecordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.ecircleag.com/rpcns", ResponseNamespace="http://webservices.ecircleag.com/rpcns", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("deleteRelatedDataRecordsReturn")]
        public int deleteRelatedDataRecords(string session, string relatedDatasetId, string key, [System.Xml.Serialization.XmlElementAttribute("colNames")] string[] colNames, [System.Xml.Serialization.XmlElementAttribute("colValues")] string[] colValues) {
            object[] results = this.Invoke("deleteRelatedDataRecords", new object[] {
                        session,
                        relatedDatasetId,
                        key,
                        colNames,
                        colValues});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteRelatedDataRecordsAsync(string session, string relatedDatasetId, string key, string[] colNames, string[] colValues) {
            this.deleteRelatedDataRecordsAsync(session, relatedDatasetId, key, colNames, colValues, null);
        }
        
        /// <remarks/>
        public void deleteRelatedDataRecordsAsync(string session, string relatedDatasetId, string key, string[] colNames, string[] colValues, object userState) {
            if ((this.deleteRelatedDataRecordsOperationCompleted == null)) {
                this.deleteRelatedDataRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteRelatedDataRecordsOperationCompleted);
            }
            this.InvokeAsync("deleteRelatedDataRecords", new object[] {
                        session,
                        relatedDatasetId,
                        key,
                        colNames,
                        colValues}, this.deleteRelatedDataRecordsOperationCompleted, userState);
        }
        
        private void OndeleteRelatedDataRecordsOperationCompleted(object arg) {
            if ((this.deleteRelatedDataRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteRelatedDataRecordsCompleted(this, new deleteRelatedDataRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3130.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.ecircleag.com/rpcns")]
    public partial class MessageContent {
        
        private string faxField;
        
        private string htmlField;
        
        private string plainTextField;
        
        private string smsField;
        
        private string subjectField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string html {
            get {
                return this.htmlField;
            }
            set {
                this.htmlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string plainText {
            get {
                return this.plainTextField;
            }
            set {
                this.plainTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sms {
            get {
                return this.smsField;
            }
            set {
                this.smsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3130.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.ecircleag.com/rpcns")]
    public partial class HourlyMessageStats {
        
        private System.Nullable<System.DateTime> hourField;
        
        private int noOfBouncesField;
        
        private int noOfClicksField;
        
        private int noOfOpeningsField;
        
        private int noOfUnsubscriptionsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> hour {
            get {
                return this.hourField;
            }
            set {
                this.hourField = value;
            }
        }
        
        /// <remarks/>
        public int noOfBounces {
            get {
                return this.noOfBouncesField;
            }
            set {
                this.noOfBouncesField = value;
            }
        }
        
        /// <remarks/>
        public int noOfClicks {
            get {
                return this.noOfClicksField;
            }
            set {
                this.noOfClicksField = value;
            }
        }
        
        /// <remarks/>
        public int noOfOpenings {
            get {
                return this.noOfOpeningsField;
            }
            set {
                this.noOfOpeningsField = value;
            }
        }
        
        /// <remarks/>
        public int noOfUnsubscriptions {
            get {
                return this.noOfUnsubscriptionsField;
            }
            set {
                this.noOfUnsubscriptionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3130.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.ecircleag.com/rpcns")]
    public partial class GroupCore {
        
        private string iSOCountryCodeField;
        
        private string iSOLanguageCodeField;
        
        private bool archivedField;
        
        private string categoryIdField;
        
        private System.Nullable<System.DateTime> creationDateField;
        
        private string descriptionField;
        
        private string emailField;
        
        private string idField;
        
        private string nameField;
        
        private int noOfBouncedMembersField;
        
        private int noOfMembersField;
        
        private int noOfMessagesField;
        
        private int noOfModMembersField;
        
        private int noOfModMessagesField;
        
        private string ownerEmailField;
        
        private string ownerFirstnameField;
        
        private string ownerLastnameField;
        
        private string ownerPKField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ISOCountryCode {
            get {
                return this.iSOCountryCodeField;
            }
            set {
                this.iSOCountryCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ISOLanguageCode {
            get {
                return this.iSOLanguageCodeField;
            }
            set {
                this.iSOLanguageCodeField = value;
            }
        }
        
        /// <remarks/>
        public bool archived {
            get {
                return this.archivedField;
            }
            set {
                this.archivedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string categoryId {
            get {
                return this.categoryIdField;
            }
            set {
                this.categoryIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> creationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int noOfBouncedMembers {
            get {
                return this.noOfBouncedMembersField;
            }
            set {
                this.noOfBouncedMembersField = value;
            }
        }
        
        /// <remarks/>
        public int noOfMembers {
            get {
                return this.noOfMembersField;
            }
            set {
                this.noOfMembersField = value;
            }
        }
        
        /// <remarks/>
        public int noOfMessages {
            get {
                return this.noOfMessagesField;
            }
            set {
                this.noOfMessagesField = value;
            }
        }
        
        /// <remarks/>
        public int noOfModMembers {
            get {
                return this.noOfModMembersField;
            }
            set {
                this.noOfModMembersField = value;
            }
        }
        
        /// <remarks/>
        public int noOfModMessages {
            get {
                return this.noOfModMessagesField;
            }
            set {
                this.noOfModMessagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ownerEmail {
            get {
                return this.ownerEmailField;
            }
            set {
                this.ownerEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ownerFirstname {
            get {
                return this.ownerFirstnameField;
            }
            set {
                this.ownerFirstnameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ownerLastname {
            get {
                return this.ownerLastnameField;
            }
            set {
                this.ownerLastnameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ownerPK {
            get {
                return this.ownerPKField;
            }
            set {
                this.ownerPKField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3130.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.ecircleag.com/rpcns")]
    public partial class GroupLookupParams {
        
        private System.Nullable<int> batchOffsetField;
        
        private System.Nullable<int> batchSizeField;
        
        private string groupNameField;
        
        private System.Nullable<bool> sortAscendingField;
        
        private string sortPropertyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> batchOffset {
            get {
                return this.batchOffsetField;
            }
            set {
                this.batchOffsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> batchSize {
            get {
                return this.batchSizeField;
            }
            set {
                this.batchSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string groupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> sortAscending {
            get {
                return this.sortAscendingField;
            }
            set {
                this.sortAscendingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sortProperty {
            get {
                return this.sortPropertyField;
            }
            set {
                this.sortPropertyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3130.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.ecircleag.com/rpcns")]
    public partial class MessageInfo {
        
        private int actualRecipientCountField;
        
        private string authorIdField;
        
        private int bounceCountField;
        
        private float clickRateField;
        
        private int clickerCountField;
        
        private System.Nullable<System.DateTime> creationDateField;
        
        private int forwardCountField;
        
        private string groupIdField;
        
        private string idField;
        
        private string nameField;
        
        private float openRateField;
        
        private int readerCountField;
        
        private int recipientCountField;
        
        private System.Nullable<System.DateTime> sendDateField;
        
        private float sendoutProgressField;
        
        private long sizeField;
        
        private string statusField;
        
        private string subjectField;
        
        private string typeField;
        
        private int unsubscriptionCountField;
        
        /// <remarks/>
        public int actualRecipientCount {
            get {
                return this.actualRecipientCountField;
            }
            set {
                this.actualRecipientCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string authorId {
            get {
                return this.authorIdField;
            }
            set {
                this.authorIdField = value;
            }
        }
        
        /// <remarks/>
        public int bounceCount {
            get {
                return this.bounceCountField;
            }
            set {
                this.bounceCountField = value;
            }
        }
        
        /// <remarks/>
        public float clickRate {
            get {
                return this.clickRateField;
            }
            set {
                this.clickRateField = value;
            }
        }
        
        /// <remarks/>
        public int clickerCount {
            get {
                return this.clickerCountField;
            }
            set {
                this.clickerCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> creationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
            }
        }
        
        /// <remarks/>
        public int forwardCount {
            get {
                return this.forwardCountField;
            }
            set {
                this.forwardCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string groupId {
            get {
                return this.groupIdField;
            }
            set {
                this.groupIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public float openRate {
            get {
                return this.openRateField;
            }
            set {
                this.openRateField = value;
            }
        }
        
        /// <remarks/>
        public int readerCount {
            get {
                return this.readerCountField;
            }
            set {
                this.readerCountField = value;
            }
        }
        
        /// <remarks/>
        public int recipientCount {
            get {
                return this.recipientCountField;
            }
            set {
                this.recipientCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> sendDate {
            get {
                return this.sendDateField;
            }
            set {
                this.sendDateField = value;
            }
        }
        
        /// <remarks/>
        public float sendoutProgress {
            get {
                return this.sendoutProgressField;
            }
            set {
                this.sendoutProgressField = value;
            }
        }
        
        /// <remarks/>
        public long size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public int unsubscriptionCount {
            get {
                return this.unsubscriptionCountField;
            }
            set {
                this.unsubscriptionCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3130.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.ecircleag.com/rpcns")]
    public partial class MessageLookupParams {
        
        private System.Nullable<int> batchOffsetField;
        
        private System.Nullable<int> batchSizeField;
        
        private string groupIdField;
        
        private string groupNameField;
        
        private System.Nullable<System.DateTime> messageCreationDateFromField;
        
        private System.Nullable<System.DateTime> messageCreationDateToField;
        
        private string messageIdField;
        
        private string messageNameField;
        
        private System.Nullable<System.DateTime> messageSendDateFromField;
        
        private System.Nullable<System.DateTime> messageSendDateToField;
        
        private string messageStatusField;
        
        private string messageSubjectField;
        
        private string messageTypeField;
        
        private System.Nullable<bool> sortAscendingField;
        
        private string sortPropertyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> batchOffset {
            get {
                return this.batchOffsetField;
            }
            set {
                this.batchOffsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> batchSize {
            get {
                return this.batchSizeField;
            }
            set {
                this.batchSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string groupId {
            get {
                return this.groupIdField;
            }
            set {
                this.groupIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string groupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> messageCreationDateFrom {
            get {
                return this.messageCreationDateFromField;
            }
            set {
                this.messageCreationDateFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> messageCreationDateTo {
            get {
                return this.messageCreationDateToField;
            }
            set {
                this.messageCreationDateToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string messageId {
            get {
                return this.messageIdField;
            }
            set {
                this.messageIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string messageName {
            get {
                return this.messageNameField;
            }
            set {
                this.messageNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> messageSendDateFrom {
            get {
                return this.messageSendDateFromField;
            }
            set {
                this.messageSendDateFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> messageSendDateTo {
            get {
                return this.messageSendDateToField;
            }
            set {
                this.messageSendDateToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string messageStatus {
            get {
                return this.messageStatusField;
            }
            set {
                this.messageStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string messageSubject {
            get {
                return this.messageSubjectField;
            }
            set {
                this.messageSubjectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string messageType {
            get {
                return this.messageTypeField;
            }
            set {
                this.messageTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> sortAscending {
            get {
                return this.sortAscendingField;
            }
            set {
                this.sortAscendingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sortProperty {
            get {
                return this.sortPropertyField;
            }
            set {
                this.sortPropertyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void getVersionCompletedEventHandler(object sender, getVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void getGroupIdCompletedEventHandler(object sender, getGroupIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGroupIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGroupIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void logonCompletedEventHandler(object sender, logonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class logonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal logonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void logoutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void setAsynchronousCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void createUserCompletedEventHandler(object sender, createUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void createOrUpdateUserByEmailCompletedEventHandler(object sender, createOrUpdateUserByEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createOrUpdateUserByEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createOrUpdateUserByEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void createOrUpdateUserMemberByEmailCompletedEventHandler(object sender, createOrUpdateUserMemberByEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createOrUpdateUserMemberByEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createOrUpdateUserMemberByEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void deleteUserByEmailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void lookupUserByEmailCompletedEventHandler(object sender, lookupUserByEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class lookupUserByEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal lookupUserByEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void lookupUserIdByEmailCompletedEventHandler(object sender, lookupUserIdByEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class lookupUserIdByEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal lookupUserIdByEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void updateUserAttributesByEmailCompletedEventHandler(object sender, updateUserAttributesByEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateUserAttributesByEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateUserAttributesByEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void lookupUserByIdentifierCompletedEventHandler(object sender, lookupUserByIdentifierCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class lookupUserByIdentifierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal lookupUserByIdentifierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void lookupUserByMobileNumberCompletedEventHandler(object sender, lookupUserByMobileNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class lookupUserByMobileNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal lookupUserByMobileNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void lookupMemberByMobileNumberCompletedEventHandler(object sender, lookupMemberByMobileNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class lookupMemberByMobileNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal lookupMemberByMobileNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void lookupUserByFaxNumberCompletedEventHandler(object sender, lookupUserByFaxNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class lookupUserByFaxNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal lookupUserByFaxNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void lookupMessageByIdCompletedEventHandler(object sender, lookupMessageByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class lookupMessageByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal lookupMessageByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MessageContent Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessageContent)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void lookupMessagesCompletedEventHandler(object sender, lookupMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class lookupMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal lookupMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MessageInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessageInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void lookupGroupsCompletedEventHandler(object sender, lookupGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class lookupGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal lookupGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GroupCore[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GroupCore[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void createMemberCompletedEventHandler(object sender, createMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void lookupUserByIdCompletedEventHandler(object sender, lookupUserByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class lookupUserByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal lookupUserByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void lookupMemberByEmailCompletedEventHandler(object sender, lookupMemberByEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class lookupMemberByEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal lookupMemberByEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void lookupMemberByEmail_v2_0CompletedEventHandler(object sender, lookupMemberByEmail_v2_0CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class lookupMemberByEmail_v2_0CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal lookupMemberByEmail_v2_0CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void lookupMemberByIdCompletedEventHandler(object sender, lookupMemberByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class lookupMemberByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal lookupMemberByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void lookupMemberById_v2_0CompletedEventHandler(object sender, lookupMemberById_v2_0CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class lookupMemberById_v2_0CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal lookupMemberById_v2_0CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void lookupMemberByIdentifierCompletedEventHandler(object sender, lookupMemberByIdentifierCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class lookupMemberByIdentifierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal lookupMemberByIdentifierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void findUserIdsByIdentifierCompletedEventHandler(object sender, findUserIdsByIdentifierCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findUserIdsByIdentifierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findUserIdsByIdentifierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void findMembershipsByEmailCompletedEventHandler(object sender, findMembershipsByEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findMembershipsByEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findMembershipsByEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void lookupMemberByUserIdCompletedEventHandler(object sender, lookupMemberByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class lookupMemberByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal lookupMemberByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void lookupMemberByUserId_v2_0CompletedEventHandler(object sender, lookupMemberByUserId_v2_0CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class lookupMemberByUserId_v2_0CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal lookupMemberByUserId_v2_0CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void updateMemberCompletedEventHandler(object sender, updateMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void updateUserCompletedEventHandler(object sender, updateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void updateUserByEmailCompletedEventHandler(object sender, updateUserByEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateUserByEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateUserByEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void deleteUserCompletedEventHandler(object sender, deleteUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void deleteMemberCompletedEventHandler(object sender, deleteMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void subscribeOrRegisterUserMemberByEmailCompletedEventHandler(object sender, subscribeOrRegisterUserMemberByEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class subscribeOrRegisterUserMemberByEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal subscribeOrRegisterUserMemberByEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void subscribeMemberByEmailCompletedEventHandler(object sender, subscribeMemberByEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class subscribeMemberByEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal subscribeMemberByEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void registerUserCompletedEventHandler(object sender, registerUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class registerUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal registerUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void unsubscribeMemberByEmailCompletedEventHandler(object sender, unsubscribeMemberByEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class unsubscribeMemberByEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal unsubscribeMemberByEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void deleteMessageCompletedEventHandler(object sender, deleteMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void cloneGroupCompletedEventHandler(object sender, cloneGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cloneGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cloneGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void changeGroupSettingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void setGroupPropertyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void getGroupPropertyCompletedEventHandler(object sender, getGroupPropertyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGroupPropertyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGroupPropertyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void setMessageFormatCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void copyAndSendDraftMessageCompletedEventHandler(object sender, copyAndSendDraftMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class copyAndSendDraftMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal copyAndSendDraftMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void sendSingleMessageToUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void sendPrioritySingleMessageToUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void sendParametrizedSingleMessageToUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void sendPriorityParametrizedSingleMessageToUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void sendGroupMessageToUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void deleteGroupCompletedEventHandler(object sender, deleteGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void sendEmailToMeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void addToBlacklistCompletedEventHandler(object sender, addToBlacklistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addToBlacklistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addToBlacklistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void isEmailOnSystemBlacklistCompletedEventHandler(object sender, isEmailOnSystemBlacklistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isEmailOnSystemBlacklistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isEmailOnSystemBlacklistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void isEmailBouncedSystemwideCompletedEventHandler(object sender, isEmailBouncedSystemwideCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isEmailBouncedSystemwideCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isEmailBouncedSystemwideCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void removeFromBlacklistCompletedEventHandler(object sender, removeFromBlacklistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeFromBlacklistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeFromBlacklistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void createOrUpdateGroupCompletedEventHandler(object sender, createOrUpdateGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createOrUpdateGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createOrUpdateGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void lookupHourlyMessageStatsCompletedEventHandler(object sender, lookupHourlyMessageStatsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class lookupHourlyMessageStatsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal lookupHourlyMessageStatsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HourlyMessageStats[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HourlyMessageStats[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void addSingleRelatedDataRecordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void updateRelatedDataRecordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void deleteRelatedDataRecordsCompletedEventHandler(object sender, deleteRelatedDataRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteRelatedDataRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteRelatedDataRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591